{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"p-4\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"text-xl font-inter font-medium\"\n}, \"Felter skabeloner\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"grid gap-x-10 grid-cols-3 mt-3\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CreateNewBox = _resolveComponent(\"CreateNewBox\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_CreateNewBox, {\n    css: \"h-[300px]\",\n    text: \"Opret ny skabelon\"\n  })])]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;AAAK;gCACdC,oBAAiE;EAA7DD,KAAK,EAAC;AAAgC,GAAC,mBAAiB;;EACvDA,KAAK,EAAC;AAAgC;;;uBAF7CE,oBAMM,OANNC,UAMM,GALJC,UAAiE,EACjEH,oBAGM,OAHNI,UAGM,GAFJC,aAAyDC;IAA3CC,GAAG,EAAC,WAAW;IAACC,IAAI,EAAC","names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_createVNode","_component_CreateNewBox","css","text"],"sourceRoot":"","sources":["/Users/khaled.el-moussa/Desktop/Projekter/Kal2/frontend/src/views/Directory/Fields.vue"],"sourcesContent":["<template>\n  <div class=\"p-4\">\n    <h1 class=\"text-xl font-inter font-medium\">Felter skabeloner</h1>\n    <div class=\"grid gap-x-10 grid-cols-3 mt-3\">\n      <CreateNewBox css=\"h-[300px]\" text=\"Opret ny skabelon\" />\n\n    </div>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from \"vue\";\n  import axios from \"axios\";\n  const title = ref();\n  const apiData = ref();\n  const loading = ref();\n  const erorr = ref();\n\n  try {\n    axios.get('/fields', {\n      headers: {\n        'Authorization': 'Bearer '+ localStorage.getItem('token')\n      }\n    }).then((response) => response.data).then((response) => {\n      apiData.value = response;\n      console.log(apiData.value);\n      loading.value = false;\n    }).catch((response) => {\n      error.value = response;\n    });\n  } catch(e) {\n    error.value = e;\n  }\n\n  getApi();\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}