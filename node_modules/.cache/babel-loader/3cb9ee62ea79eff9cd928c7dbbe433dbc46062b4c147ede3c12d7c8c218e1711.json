{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from \"vue\";\nimport axios from \"axios\";\nexport default {\n  __name: 'Field',\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const title = ref();\n    const primary = ref();\n    const loading = ref();\n    const error = ref();\n    const errorMsg = ref();\n    const newField = {\n      type: '',\n      title: 'Overskrift',\n      value: ''\n    };\n    const fields = ref([newField]);\n    const save = async () => {\n      if (!loading.value && !error.value) {\n        loading.value = true;\n        await axios.post('/task', {\n          task: {\n            title: title.value,\n            startDate: startDate.value,\n            startTime: startTime.value ? startTime.value : '00:00',\n            color: color.value,\n            endDate: endDate.value,\n            endTime: endTime.value\n          }\n        }, {\n          headers: {\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\n          }\n        }).then(response => response.data).then(response => {\n          loading.value = false;\n        }).catch(response => {\n          error.value = response;\n          errorMsg.value = 'Der opstod en fejl';\n          loading.value = false;\n        });\n      } else {\n        return false;\n      }\n    };\n    const addField = () => {\n      fields.value.push(newField);\n    };\n    const getFields = (fieldObj, index) => {\n      fields.value[index] = fieldObj;\n    };\n    const __returned__ = {\n      title,\n      primary,\n      loading,\n      error,\n      errorMsg,\n      newField,\n      fields,\n      save,\n      addField,\n      getFields,\n      ref,\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":";AA8BE,SAASA,GAAG,QAAQ,KAAK;AACzB,OAAOC,KAAK,MAAM,OAAO;;;;;;;IAEzB,MAAMC,KAAK,GAAGF,GAAG,EAAE;IACnB,MAAMG,OAAO,GAAGH,GAAG,EAAE;IACrB,MAAMI,OAAO,GAAGJ,GAAG,EAAE;IACrB,MAAMK,KAAK,GAAGL,GAAG,EAAE;IACnB,MAAMM,QAAQ,GAAGN,GAAG,EAAE;IAEtB,MAAMO,QAAQ,GAAG;MACfC,IAAI,EAAE,EAAE;MACRN,KAAK,EAAE,YAAY;MACnBO,KAAK,EAAE;IACT,CAAC;IAED,MAAMC,MAAM,GAAGV,GAAG,CAAC,CAACO,QAAQ,CAAC,CAAC;IAE9B,MAAMI,IAAI,GAAG,YAAY;MACvB,IAAI,CAACP,OAAO,CAACK,KAAK,IAAI,CAACJ,KAAK,CAACI,KAAK,EAAE;QAClCL,OAAO,CAACK,KAAK,GAAG,IAAI;QAEpB,MAAMR,KAAK,CAACW,IAAI,CAAC,OAAO,EAAE;UACxBC,IAAI,EAAE;YACJX,KAAK,EAAEA,KAAK,CAACO,KAAK;YAClBK,SAAS,EAAEA,SAAS,CAACL,KAAK;YAC1BM,SAAS,EAAEA,SAAS,CAACN,KAAK,GAAGM,SAAS,CAACN,KAAK,GAAG,OAAO;YACtDO,KAAK,EAAEA,KAAK,CAACP,KAAK;YAClBQ,OAAO,EAAEA,OAAO,CAACR,KAAK;YACtBS,OAAO,EAAEA,OAAO,CAACT;UACnB;QACF,CAAC,EAAE;UACDU,OAAO,EAAE;YACP,eAAe,EAAE,SAAS,GAAEC,YAAY,CAACC,OAAO,CAAC,OAAO;UAC1D;QACF,CAAC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAACF,IAAI,CAAEC,QAAQ,IAAK;UACtDnB,OAAO,CAACK,KAAK,GAAG,KAAK;QACvB,CAAC,CAAC,CAACgB,KAAK,CAAEF,QAAQ,IAAK;UACrBlB,KAAK,CAACI,KAAK,GAAGc,QAAQ;UACtBjB,QAAQ,CAACG,KAAK,GAAG,oBAAoB;UACrCL,OAAO,CAACK,KAAK,GAAG,KAAK;QACvB,CAAC,CAAC;MACJ,CAAC,MAAM;QACL,OAAO,KAAK;MACd;IACF,CAAC;IAED,MAAMiB,QAAQ,GAAG,MAAM;MACrBhB,MAAM,CAACD,KAAK,CAACkB,IAAI,CAACpB,QAAQ,CAAC;IAC7B,CAAC;IAED,MAAMqB,SAAS,GAAG,CAACC,QAAQ,EAAEC,KAAK,KAAK;MACrCpB,MAAM,CAACD,KAAK,CAACqB,KAAK,CAAC,GAAGD,QAAQ;IAChC,CAAC","names":["ref","axios","title","primary","loading","error","errorMsg","newField","type","value","fields","save","post","task","startDate","startTime","color","endDate","endTime","headers","localStorage","getItem","then","response","data","catch","addField","push","getFields","fieldObj","index"],"sources":["/Users/khaled.el-moussa/Desktop/Projekter/Kal2/frontend/src/views/New/Field.vue"],"sourcesContent":["<template>\n  <div class=\"auth-content\">\n    <Block class=\"mt-5\">\n      <div class=\"p-10\">\n        <BlockTitle title=\"Opret ny skabelon\" class=\"mb-5\"/>\n        <input type=\"text\" id=\"title\" name=\"title\" v-model=\"title\" class=\"input-field-non-border\" placeholder=\"Navngiv skabelonen\">\n\n        <div class=\"mt-6\">\n          <CreateField v-for=\"(field, index) in fields\" class=\"mt-5\" :type=\"field.type\" :title=\"field.title\" :value=\"field.value\" @changes=\"n => getFields(n, index)\"/>\n\n          <div class=\"text-primary-Darker1 tracking-[0.45px] mt-2 ml-[2px] font-inter font-medium text-[13px] inline-flex border-b border-primary-Darker1 items-center cursor-pointer hover-transition hover:opacity-75\" @click=\"addField\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" class=\"w-5 mr-[1px]\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M12 6v12m6-6H6\" />\n            </svg>\n            Tilføj ny felt\n          </div>\n        </div>\n      </div>\n\n      <div class=\"w-full bg-gray-50 px-10 py-4 rounded-md\">\n        <div class=\"flex items-center\">\n          <input type=\"checkbox\" id=\"primary\" name=\"primary\" v-model=\"primary\">\n          <label for=\"primary\" class=\"cursor-pointer text-gray-600 mt-[1px] ml-2\"> Sæt som primære</label>\n        </div>\n        <button class=\"bg-primary px-5 py-2 text-white rounded-md text-sm font-medium hover-transition mt-5 hover:bg-primary-Darker active:bg-primary-Darker1\" @click=\"save\">Gem skabelon</button>\n      </div>\n    </Block>\n  </div>\n</template>\n<script setup>\n  import { ref } from \"vue\";\n  import axios from \"axios\";\n\n  const title = ref();\n  const primary = ref();\n  const loading = ref();\n  const error = ref();\n  const errorMsg = ref();\n\n  const newField = {\n    type: '',\n    title: 'Overskrift',\n    value: ''\n  }\n\n  const fields = ref([newField]);\n\n  const save = async () => {\n    if (!loading.value && !error.value) {\n      loading.value = true;\n\n      await axios.post('/task', {\n        task: {\n          title: title.value,\n          startDate: startDate.value,\n          startTime: startTime.value ? startTime.value : '00:00',\n          color: color.value,\n          endDate: endDate.value,\n          endTime: endTime.value\n        }\n      }, {\n        headers: {\n          'Authorization': 'Bearer '+ localStorage.getItem('token')\n        }\n      }).then((response) => response.data).then((response) => {\n        loading.value = false;\n      }).catch((response) => {\n        error.value = response;\n        errorMsg.value = 'Der opstod en fejl';\n        loading.value = false;\n      });\n    } else {\n      return false;\n    }\n  }\n\n  const addField = () => {\n    fields.value.push(newField);\n  }\n\n  const getFields = (fieldObj, index) => {\n    fields.value[index] = fieldObj;\n  }\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}