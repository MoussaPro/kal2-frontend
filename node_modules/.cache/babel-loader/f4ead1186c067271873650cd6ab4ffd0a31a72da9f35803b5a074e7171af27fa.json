{"ast":null,"code":"import { toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"w-full\"\n};\nconst _hoisted_2 = {\n  class: \"px-5\"\n};\nconst _hoisted_3 = {\n  class: \"flex mt-5 items-center\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"font-inter text-[14px] font-medium text-gray-800 mb-1\"\n}, \"Opgave start\", -1 /* HOISTED */);\nconst _hoisted_5 = {\n  class: \"text-[13px]\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $props.task ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    class: _normalizeClass([\"max-w-full rounded-md shadow-md p-2\", $setup.color[0].css])\n  }, [_createElementVNode(\"div\", {\n    class: _normalizeClass([\"font-semibold font-inter text-[16px] overflow-x-scroll relative whitespace-nowrap\", $props.task.task_color === 'yellow' ? 'text-black' : 'text-white'])\n  }, _toDisplayString($props.task.title), 3 /* TEXT, CLASS */)], 2 /* CLASS */), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", null, [_hoisted_4, _createElementVNode(\"p\", _hoisted_5, _toDisplayString($props.task.task_date), 1 /* TEXT */)])])])])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"mappings":";;;EACOA,KAAK,EAAC;;;EAKJA,KAAK,EAAC;AAAM;;EACVA,KAAK,EAAC;AAAwB;gCAE/BC,oBAAiF;EAA9ED,KAAK,EAAC;AAAuD,GAAC,cAAY;;EAC1EA,KAAK,EAAC;AAAa;;SATJE,WAAI,kBAA9BC,oBAcM,OAdNC,UAcM,GAbJH,oBAEM;IAFDD,KAAK,mBAAC,qCAAqC,EAASK,YAAK,IAAIC,GAAG;MACnEL,oBAAyL;IAApLD,KAAK,mBAAC,mFAAmF,EAASE,WAAI,CAACK,UAAU;sBAAgDL,WAAI,CAACM,KAAK,0CAGlLP,oBAOM,OAPNQ,UAOM,GANJR,oBAKM,OALNS,UAKM,GAJJT,oBAGM,cAFJU,UAAiF,EACjFV,oBAA+C,KAA/CW,UAA+C,mBAArBV,WAAI,CAACW,SAAS","names":["class","_createElementVNode","$props","_createElementBlock","_hoisted_1","$setup","css","task_color","title","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","task_date"],"sourceRoot":"","sources":["/Users/khaled.el-moussa/Desktop/Projekter/Kal2/frontend/src/components/Calendar/TaskView.vue"],"sourcesContent":["<template>\n  <div class=\"w-full\" v-if=\"task\">\n    <div class=\"max-w-full rounded-md shadow-md p-2\" :class=\"color[0].css\">\n      <div class=\"font-semibold font-inter text-[16px] overflow-x-scroll relative whitespace-nowrap\" :class=\"task.task_color === 'yellow' ? 'text-black' : 'text-white'\">{{ task.title }}</div>\n    </div>\n\n    <div class=\"px-5\">\n      <div class=\"flex mt-5 items-center\">\n        <div>\n          <p class=\"font-inter text-[14px] font-medium text-gray-800 mb-1\">Opgave start</p>\n          <p class=\"text-[13px]\">{{ task.task_date }}</p>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</template>\n<script setup>\n  import colorHandler from \"@/composables/colorHandler\";\n  import { ref } from \"vue\";\n  const { colors } = colorHandler();\n\n  const props = defineProps({\n    task: Object\n  });\n\n  const color = ref();\n  color.value = colors.filter(color => {\n    return color.name === props.task.task_color\n  });\n\n  console.log(props.task);\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}