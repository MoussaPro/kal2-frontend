{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"h-full relative z-50\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"line-clamp-1 -mx-[2px]\"\n};\nconst _hoisted_3 = {\n  class: \"inline text-[10px] mx-[2px] font-medium\"\n};\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = {\n  class: \"leading-none font-medium font-inter h-full overflow-y-hidden\"\n};\nconst _hoisted_6 = {\n  class: \"text-[10px]\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $props.task.moreTask ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" More task component \"), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"border rounded-md h-full flex flex-col justify-between text-xs px-2 py-[2px] font-inter hover-transition hover:opacity-75 relative shadow bg-primary-Darker text-white border-primary font-bold cursor-pointer\", $setup.openMoreTaskToggle ? 'opacity-75 scale-[105%]' : 'hover:scale-[102%]']),\n    onClick: $setup.openMoreTask\n  }, [_createElementVNode(\"p\", null, _toDisplayString($props.task.title), 1 /* TEXT */), $props.task.moreTask ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.task.tasks, (task, i) => {\n    return _openBlock(), _createElementBlock(\"p\", _hoisted_3, [i !== 0 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_4, \"| \")) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"span\", null, \"#\" + _toDisplayString(task.id), 1 /* TEXT */)]);\n  }), 256 /* UNKEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true)], 2 /* CLASS */)])) : (_openBlock(), _createElementBlock(\"div\", {\n    key: 1,\n    class: \"border rounded-md text-xs px-2 py-[5px] shadow relative hover-transition hover:opacity-75 cursor-pointer hover:scale-[102%]\",\n    style: _normalizeStyle($setup.styling)\n  }, [_createElementVNode(\"p\", _hoisted_5, _toDisplayString($props.task.title), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_6, \"#\" + _toDisplayString($props.task.id), 1 /* TEXT */)], 4 /* STYLE */));\n}","map":{"version":3,"mappings":";;;EAC4BA,KAAK,EAAC;;;;EAIvBA,KAAK,EAAC;;;EACNA,KAAK,EAAC;AAAyC;;;;;EASnDA,KAAK,EAAC;AAA8D;;EACjEA,KAAK,EAAC;AAAa;;SAfhBC,WAAI,CAACC,QAAQ,kBAAxBC,oBAWM,OAXNC,UAWM,GAVJC,4CAA4B,EAC5BC,oBAQM;IARDN,KAAK,mBAAC,gNAAgN,EAASO,yBAAkB;IAAqDC,OAAK,EAAED;MAChTD,oBAAuB,4BAAjBL,WAAI,CAACQ,KAAK,kBAC0BR,WAAI,CAACC,QAAQ,kBAAvDC,oBAKM,OALNO,UAKM,sBAJJP,oBAGIQ,6BAHmEV,WAAI,CAACW,KAAK,GAAtBC,IAAI,EAAEC,CAAC;yBAAlEX,oBAGI,KAHJY,UAGI,GAFUD,CAAC,wBAAbX,oBAA8B,oBAAT,IAAE,wCACvBG,oBAA2B,cAArB,GAAC,oBAAGO,IAAI,CAACG,EAAE;+GAMzBb,oBAGM;;IAHMH,KAAK,EAAC,6HAA6H;IAAEiB,KAAK,kBAAEV,cAAO;MAC7JD,oBAA4F,KAA5FY,UAA4F,mBAAjBjB,WAAI,CAACQ,KAAK,kBACrFH,oBAA+C,QAA/Ca,UAA+C,EAArB,GAAC,oBAAGlB,WAAI,CAACe,EAAE","names":["class","$props","moreTask","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","$setup","onClick","title","_hoisted_2","_Fragment","tasks","task","i","_hoisted_3","id","style","_hoisted_5","_hoisted_6"],"sourceRoot":"","sources":["/Users/khaled.el-moussa/Desktop/Projekter/Kal2/frontend/src/components/Calendar/TaskBox.vue"],"sourcesContent":["<template>\n  <div v-if=\"task.moreTask\" class=\"h-full relative z-50\">\n    <!-- More task component -->\n    <div class=\"border rounded-md h-full flex flex-col justify-between text-xs px-2 py-[2px] font-inter hover-transition hover:opacity-75 relative shadow bg-primary-Darker text-white border-primary font-bold cursor-pointer\" :class=\"openMoreTaskToggle ? 'opacity-75 scale-[105%]': 'hover:scale-[102%]'\" @click=\"openMoreTask\">\n      <p>{{ task.title }}</p>\n      <div class=\"line-clamp-1 -mx-[2px]\" v-if=\"task.moreTask\">\n        <p class=\"inline text-[10px] mx-[2px] font-medium\" v-for=\"(task, i) in task.tasks\">\n          <span v-if=\"i !== 0\">| </span>\n          <span>#{{ task.id }}</span>\n        </p>\n      </div>\n    </div>\n  </div>\n\n  <div v-else class=\"border rounded-md text-xs px-2 py-[5px] shadow relative hover-transition hover:opacity-75 cursor-pointer hover:scale-[102%]\" :style=\"styling\">\n    <p class=\"leading-none font-medium font-inter h-full overflow-y-hidden\">{{ task.title }}</p>\n    <span class=\"text-[10px]\">#{{ task.id }}</span>\n  </div>\n</template>\n<script setup>\n  import timeHandler from \"@/composables/timeHandler\";\n  import colorHandler from \"@/composables/colorHandler\";\n  import { ref } from \"vue\";\n\n  const props = defineProps({\n    task: {\n      type: Object\n    },\n    // Should display more task\n    moreTask: {\n      type: Boolean,\n      default: false\n    },\n    // Inside a more task menu\n    subTask : {\n      type: Boolean,\n      default: false\n    }\n  });\n  const emit = defineEmits(['openMoreTask'])\n  const { taskHeight, diffBetweenTwoTimes } = timeHandler();\n  const { getTaskColors } = colorHandler();\n  const styling = ref('');\n\n  if (!props.moreTask) {\n    if (!props.subTask) {\n      if (props.task.task_time_end) {\n        styling.value = \"height: \" + diffBetweenTwoTimes(props.task.task_time, props.task.task_time_end, 'minutes')*taskHeight.minute + \"px;\";\n      } else {\n        styling.value = \"height: 25px;\"\n      }\n      styling.value += \" margin-top:\" + (props.task.diff / 60) * taskHeight.hour + \"px;\";\n      styling.value += \" z-index:\" + props.task.task_time.slice(0, 2) + \";\";\n    } else {\n      styling.value = \" height: 100%;\";\n    }\n    const color = ref(getTaskColors(props.task.task_color));\n    styling.value += \" background-color:\" + color.value['background'] + \";\";\n    styling.value += \" color:\" + color.value['text'] + \";\";\n    styling.value += \" border-color:\" + color.value['border'] + \";\";\n  }\n\n  const openMoreTaskToggle = ref(false);\n  const openMoreTask = () => {\n    emit('openMoreTask');\n\n    return openMoreTaskToggle.value = !openMoreTaskToggle.value;\n  }\n\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}