{"ast":null,"code":"import { toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createTextVNode(_toDisplayString($props.task.diff) + \" \", 1 /* TEXT */), _createElementVNode(\"div\", {\n    class: \"bg-red-500 rounded-md text-white text-xs px-2 py-[2px] font-inter shadow relative z-50\",\n    style: _normalizeStyle({\n      height: !$props.task.moreTask ? $setup.calculateHeight($props.task.task_time, $props.task.task_time_end) + 'px' : ''\n    }),\n    onClick: _cache[0] || (_cache[0] = $event => $props.task.moreTask ? _ctx.openModel($props.task.id) : '')\n  }, _toDisplayString($props.task.title), 5 /* TEXT, STYLE */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;+FACKA,WAAI,CAACC,IAAI,IAAG,GACf,qCAAkR;IAA7QC,KAAK,EAAC,wFAAwF;IAAEC,KAAK;MAAAC,SAAaJ,WAAI,CAACK,QAAQ,GAAGC,sBAAe,CAACN,WAAI,CAACO,SAAS,EAAEP,WAAI,CAACQ,aAAa;IAAA;IAAmBC,OAAK,sCAAET,WAAI,CAACK,QAAQ,GAAGK,cAAS,CAACV,WAAI,CAACW,EAAE;sBAAWX,WAAI,CAACY,KAAK","names":["$props","diff","class","style","height","moreTask","$setup","task_time","task_time_end","onClick","_ctx","id","title"],"sourceRoot":"","sources":["/Users/khaled.el-moussa/Desktop/Projekter/Kal2/frontend/src/components/Calendar/Task.vue"],"sourcesContent":["<template>\n  {{ task.diff }}\n  <div class=\"bg-red-500 rounded-md text-white text-xs px-2 py-[2px] font-inter shadow relative z-50\" :style=\"{ height: !task.moreTask ? calculateHeight(task.task_time, task.task_time_end) + 'px' : '', }\" @click=\"task.moreTask ? openModel(task.id) : ''\">{{ task.title }}</div>\n</template>\n\n<script setup>\n  import timeHandler from \"@/composables/timeHandler\";\n\n  const props = defineProps({\n    task: {\n      type: Object,\n      required: true\n    }\n  });\n\n  const { taskHeight, diffBetweenTwoTimes } = timeHandler();\n\n  const calculateHeight = (start, end) => {\n    const diff = diffBetweenTwoTimes(start, end, 'minutes');\n    return diff*taskHeight.minute;\n  }\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}