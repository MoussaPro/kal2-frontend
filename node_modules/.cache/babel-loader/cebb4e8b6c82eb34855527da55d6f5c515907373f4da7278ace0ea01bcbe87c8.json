{"ast":null,"code":"import { toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vShow as _vShow, withDirectives as _withDirectives, resolveDirective as _resolveDirective, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"relative\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"absolute mt-4 gap-x-2 flex ml-5 bg-gray-50 p-3 shadow-xl p-3 rounded hover-transition z-20\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"w-0 h-0 border-[15px] absolute top-0 -mt-7 border-l-transparent border-r-transparent border-t-transparent border-b-gray-100\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_4 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _directive_click_outside = _resolveDirective(\"click-outside\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    class: _normalizeClass([\"w-24 h-10 rounded-md shadow-md hover-transition cursor-pointer flex items-center justify-center text-sm font-inter font-medium\", [$setup.activeColor.css, {\n      'hover:scale-[101%] hover:shadow-xl': !$setup.toggleColors\n    }]]),\n    onClick: _cache[0] || (_cache[0] = $event => $setup.toggleColors = !$setup.toggleColors)\n  }, _toDisplayString($setup.activeColor.display), 3 /* TEXT, CLASS */), $setup.toggleColors ? _withDirectives((_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_hoisted_3, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.colors, color => {\n    return _withDirectives((_openBlock(), _createElementBlock(\"div\", {\n      class: _normalizeClass([color.css, \"w-10 h-10 rounded shadow-md hover-transition cursor-pointer hover:scale-[102%] hover:shadow-xl\"]),\n      onClick: $event => {\n        $setup.setActiveColor(color);\n        _ctx.$emit('color', $setup.activeColor.name);\n      }\n    }, null, 10 /* CLASS, PROPS */, _hoisted_4)), [[_vShow, $setup.activeColor.name !== color.name]]);\n  }), 256 /* UNKEYED_FRAGMENT */))])), [[_directive_click_outside, $setup.hideColor]]) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;AAAU;;;EAIMA,KAAK,EAAC;;gCAC7BC,oBAA+I;EAA1ID,KAAK,EAAC;AAA6H;;;;uBAL5IE,oBAQM,OARNC,UAQM,GAPJF,oBAEM;IAFDD,KAAK,mBAAC,gIAAgI,GAAUI,kBAAW,CAACC,GAAG;MAAA,uCAA0CD;IAAY;IAAKE,OAAK,sCAAEF,mBAAY,IAAIA,mBAAY;sBAC7PA,kBAAW,CAACG,OAAO,yBAEbH,mBAAY,kCAAvBF,oBAGM,OAHNM,UAGM,GAFJC,UAA+I,qBAC/IP,oBAAuQQ,6BAAlPN,aAAM,EAAfO,KAAK;0CAAjBT,oBAAuQ;MAAzOF,KAAK,mBAAEW,KAAK,CAACN,GAAG,EAAQ,gGAAgG;MAA2CC,OAAK;QAAEF,qBAAc,CAACO,KAAK;QAAGC,UAAK,UAAUR,kBAAW,CAACS,IAAI;MAAA;4DAA/FT,kBAAW,CAACS,IAAI,KAAKF,KAAK,CAACE,IAAI;mEAFnDT,gBAAS","names":["class","_createElementVNode","_createElementBlock","_hoisted_1","$setup","css","onClick","display","_hoisted_2","_hoisted_3","_Fragment","color","_ctx","name"],"sourceRoot":"","sources":["/Users/khaled.el-moussa/Desktop/Projekter/Kal2/frontend/src/components/Task/ColorPicker.vue"],"sourcesContent":["<template>\n  <div class=\"relative\">\n    <div class=\"w-24 h-10 rounded-md shadow-md hover-transition cursor-pointer flex items-center justify-center text-sm font-inter font-medium\" :class=\"[activeColor.css, {'hover:scale-[101%] hover:shadow-xl': !toggleColors}]\" @click=\"toggleColors = !toggleColors\">\n      {{ activeColor.display }}\n    </div>\n    <div v-if=\"toggleColors\" class=\"absolute mt-4 gap-x-2 flex ml-5 bg-gray-50 p-3 shadow-xl p-3 rounded hover-transition z-20\" v-click-outside=\"hideColor\">\n      <div class=\"w-0 h-0 border-[15px] absolute top-0 -mt-7 border-l-transparent border-r-transparent border-t-transparent border-b-gray-100\"></div>\n      <div v-for=\"color in colors\" :class=\"color.css\" class=\"w-10 h-10 rounded shadow-md hover-transition cursor-pointer hover:scale-[102%] hover:shadow-xl\" v-show=\"activeColor.name !== color.name\" @click=\"setActiveColor(color); $emit('color', activeColor.name)\"></div>\n    </div>\n  </div>\n</template>\n<script setup>\n  const props = defineProps({\n    color: {\n      type: Object,\n      default: {\n        name: 'green',\n        display: 'GrÃ¸n',\n        css: 'bg-primary text-white'\n      }\n    }\n  })\n\n  import colorHandler from \"@/composables/colorHandler\";\n  import { ref } from \"vue\";\n  const { colors } = colorHandler();\n  const activeColor = ref(props.color);\n\n  const toggleColors = ref(false);\n\n  const hideColor = () => {\n    toggleColors.value = false;\n  }\n\n  const setActiveColor = (color) => {\n    activeColor.value = color;\n    hideColor();\n  }\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}