{"ast":null,"code":"import timeHandler from \"@/composables/timeHandler\";\nimport colorHandler from \"@/composables/colorHandler\";\nimport { ref } from \"vue\";\nexport default {\n  __name: 'TaskBox',\n  props: {\n    task: {\n      type: Object\n    },\n    // Should display more task\n    moreTask: {\n      type: Boolean,\n      default: false\n    },\n    // Inside a more task menu\n    subTask: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: ['openMoreTask'],\n  setup(__props, {\n    expose,\n    emit\n  }) {\n    expose();\n    const props = __props;\n    const {\n      taskHeight,\n      diffBetweenTwoTimes\n    } = timeHandler();\n    const {\n      getTaskColors\n    } = colorHandler();\n    const styling = ref('');\n    console.log(props.task.Tasks);\n    if (!props.moreTask) {\n      if (!props.subTask) {\n        styling.value = \"height: \" + diffBetweenTwoTimes(props.task.task_time, props.task.task_time_end, 'minutes') * taskHeight.minute + \"px;\";\n        styling.value += \" margin-top:\" + props.task.diff / 60 * taskHeight.hour + \"px;\";\n        styling.value += \" z-index:\" + props.task.task_time.slice(0, 2) + \";\";\n      } else {\n        styling.value = \" height: 100%;\";\n      }\n      const color = ref(getTaskColors(props.task.task_color));\n      styling.value += \" background-color:\" + color.value['background'] + \";\";\n      styling.value += \" color:\" + color.value['text'] + \";\";\n      styling.value += \" border-color:\" + color.value['border'] + \";\";\n    }\n    const openMoreTaskToggle = ref(false);\n    const openMoreTask = () => {\n      emit('openMoreTask');\n      return openMoreTaskToggle.value = !openMoreTaskToggle.value;\n    };\n    const __returned__ = {\n      props,\n      emit,\n      taskHeight,\n      diffBetweenTwoTimes,\n      getTaskColors,\n      styling,\n      openMoreTaskToggle,\n      openMoreTask,\n      timeHandler,\n      colorHandler,\n      ref\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":"AAoBE,OAAOA,WAAW,MAAM,2BAA2B;AACnD,OAAOC,YAAY,MAAM,4BAA4B;AACrD,SAASC,GAAG,QAAQ,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;IAkBzB,MAAM;MAAEC,UAAU;MAAEC;IAAoB,CAAC,GAAGJ,WAAW,EAAE;IACzD,MAAM;MAAEK;IAAc,CAAC,GAAGJ,YAAY,EAAE;IACxC,MAAMK,OAAO,GAAGJ,GAAG,CAAC,EAAE,CAAC;IACvBK,OAAO,CAACC,GAAG,CAACC,KAAK,CAACC,IAAI,CAACC,KAAK,CAAC;IAE7B,IAAI,CAACF,KAAK,CAACG,QAAQ,EAAE;MACnB,IAAI,CAACH,KAAK,CAACI,OAAO,EAAE;QAClBP,OAAO,CAACQ,KAAK,GAAG,UAAU,GAAGV,mBAAmB,CAACK,KAAK,CAACC,IAAI,CAACK,SAAS,EAAEN,KAAK,CAACC,IAAI,CAACM,aAAa,EAAE,SAAS,CAAC,GAACb,UAAU,CAACc,MAAM,GAAG,KAAK;QACrIX,OAAO,CAACQ,KAAK,IAAI,cAAc,GAAIL,KAAK,CAACC,IAAI,CAACQ,IAAI,GAAG,EAAE,GAAIf,UAAU,CAACgB,IAAI,GAAG,KAAK;QAClFb,OAAO,CAACQ,KAAK,IAAI,WAAW,GAAGL,KAAK,CAACC,IAAI,CAACK,SAAS,CAACK,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG;MACvE,CAAC,MAAM;QACLd,OAAO,CAACQ,KAAK,GAAG,gBAAgB;MAClC;MACA,MAAMO,KAAK,GAAGnB,GAAG,CAACG,aAAa,CAACI,KAAK,CAACC,IAAI,CAACY,UAAU,CAAC,CAAC;MACvDhB,OAAO,CAACQ,KAAK,IAAI,oBAAoB,GAAGO,KAAK,CAACP,KAAK,CAAC,YAAY,CAAC,GAAG,GAAG;MACvER,OAAO,CAACQ,KAAK,IAAI,SAAS,GAAGO,KAAK,CAACP,KAAK,CAAC,MAAM,CAAC,GAAG,GAAG;MACtDR,OAAO,CAACQ,KAAK,IAAI,gBAAgB,GAAGO,KAAK,CAACP,KAAK,CAAC,QAAQ,CAAC,GAAG,GAAG;IACjE;IAEA,MAAMS,kBAAkB,GAAGrB,GAAG,CAAC,KAAK,CAAC;IACrC,MAAMsB,YAAY,GAAG,MAAM;MACzBC,IAAI,CAAC,cAAc,CAAC;MAEpB,OAAOF,kBAAkB,CAACT,KAAK,GAAG,CAACS,kBAAkB,CAACT,KAAK;IAC7D,CAAC","names":["timeHandler","colorHandler","ref","taskHeight","diffBetweenTwoTimes","getTaskColors","styling","console","log","props","task","Tasks","moreTask","subTask","value","task_time","task_time_end","minute","diff","hour","slice","color","task_color","openMoreTaskToggle","openMoreTask","emit"],"sources":["/Users/khaled.el-moussa/Desktop/Projekter/Kal2/frontend/src/components/Calendar/TaskBox.vue"],"sourcesContent":["<template>\n  <div v-if=\"task.moreTask\" class=\"h-full relative z-50\">\n    <!-- More task component -->\n    <div class=\"border rounded-md h-full flex flex-col justify-between text-xs px-2 py-[2px] font-inter hover-transition hover:opacity-75 relative shadow bg-primary-Darker text-white border-primary font-bold cursor-pointer\" :class=\"{'opacity-50 hover:opacity-75': openMoreTaskToggle}\" @click=\"openMoreTask\">\n      <p>{{ task.title }}</p>\n      <div class=\"line-clamp-1 -mx-[2px]\" v-if=\"task.moreTask\">\n        <p class=\"inline text-[10px] mx-[2px] font-medium\" v-for=\"(task, i) in task.tasks\">\n          <span v-if=\"i !== 0\">| </span>\n          <span>#{{ task.id }}</span>\n        </p>\n      </div>\n    </div>\n  </div>\n\n  <div v-else class=\"border rounded-md text-xs px-2 py-[5px] font-inter shadow relative hover-transition hover:opacity-75 cursor-pointer\" :style=\"styling\">\n    <p class=\"leading-none font-medium\">{{ task.title }}</p>\n    <span class=\"text-[10px]\">#{{ task.id }}</span>\n  </div>\n</template>\n<script setup>\n  import timeHandler from \"@/composables/timeHandler\";\n  import colorHandler from \"@/composables/colorHandler\";\n  import { ref } from \"vue\";\n\n  const props = defineProps({\n    task: {\n      type: Object\n    },\n    // Should display more task\n    moreTask: {\n      type: Boolean,\n      default: false\n    },\n    // Inside a more task menu\n    subTask : {\n      type: Boolean,\n      default: false\n    }\n  });\n  const emit = defineEmits(['openMoreTask'])\n  const { taskHeight, diffBetweenTwoTimes } = timeHandler();\n  const { getTaskColors } = colorHandler();\n  const styling = ref('');\n  console.log(props.task.Tasks)\n\n  if (!props.moreTask) {\n    if (!props.subTask) {\n      styling.value = \"height: \" + diffBetweenTwoTimes(props.task.task_time, props.task.task_time_end, 'minutes')*taskHeight.minute + \"px;\";\n      styling.value += \" margin-top:\" + (props.task.diff / 60) * taskHeight.hour + \"px;\";\n      styling.value += \" z-index:\" + props.task.task_time.slice(0, 2) + \";\";\n    } else {\n      styling.value = \" height: 100%;\";\n    }\n    const color = ref(getTaskColors(props.task.task_color));\n    styling.value += \" background-color:\" + color.value['background'] + \";\";\n    styling.value += \" color:\" + color.value['text'] + \";\";\n    styling.value += \" border-color:\" + color.value['border'] + \";\";\n  }\n\n  const openMoreTaskToggle = ref(false);\n  const openMoreTask = () => {\n    emit('openMoreTask');\n\n    return openMoreTaskToggle.value = !openMoreTaskToggle.value;\n  }\n\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}