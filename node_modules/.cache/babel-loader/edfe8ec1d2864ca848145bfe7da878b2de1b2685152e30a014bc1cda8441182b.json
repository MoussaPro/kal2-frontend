{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"\"\n}, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createTextVNode(_toDisplayString($setup.title) + \" \", 1 /* TEXT */), _hoisted_1]);\n}","map":{"version":3,"mappings":";gCAGIA,oBAA2B;EAApBC,IAAI,EAAC;AAAE;;;uBAFhBC,oBAGM,gDAFDC,YAAK,IAAG,GACX,2BAA2B","names":["_createElementVNode","type","_createElementBlock","$setup"],"sourceRoot":"","sources":["/Users/khaled.el-moussa/Desktop/Projekter/Kal2/frontend/src/components/DisplayField.vue"],"sourcesContent":["<template>\n  <div>\n    {{ title }}\n    <input type=\"\" v-model=\"\"/>\n  </div>\n</template>\n<script setup>\n  import { ref } from \"vue\";\n\n  const props = defineProps({\n    field: Object\n  });\n\n  const title = ref(props.field.title);\n  const type = ref(props.field.type);\n  const value = ref(props.field.value);\n\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}