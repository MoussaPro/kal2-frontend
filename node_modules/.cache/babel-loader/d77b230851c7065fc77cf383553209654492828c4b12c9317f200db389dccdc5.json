{"ast":null,"code":"import { ref } from \"vue\";\nimport axios from \"axios\";\nexport default {\n  __name: 'CreateTask',\n  emits: ['close', 'created'],\n  setup(__props, {\n    expose,\n    emit\n  }) {\n    expose();\n    const startDate = ref(null);\n    const startTime = ref(null);\n    const endDate = ref(null);\n    const endTime = ref(null);\n    const title = ref(null);\n    const fields = ref(null);\n    const color = ref('green');\n    const allDaySwitch = ref(false);\n    const loading = ref(false);\n    const error = ref(null);\n    const errorMsg = ref(null);\n    const toggleAllDaySwitch = () => {\n      allDaySwitch.value = !allDaySwitch.value;\n      if (allDaySwitch.value === true) {\n        startTime.value = null;\n        endTime.value = null;\n      }\n    };\n    const setFields = getFields => {\n      fields.value = getFields;\n      console.log(fields.value);\n    };\n    const createTask = async () => {\n      error.value = false;\n      if (startDate.value === null) {\n        error.value = true;\n        errorMsg.value = 'Vælg venligst en dato';\n      }\n      if (title.value === null) {\n        error.value = true;\n        errorMsg.value = 'Angiv venligst en overskrift';\n      }\n      if (!loading.value && !error.value) {\n        loading.value = true;\n        await axios.post('/task', {\n          task: {\n            title: title.value,\n            startDate: startDate.value,\n            startTime: startTime.value ? startTime.value : allDaySwitch.value ? null : '00:00',\n            color: color.value,\n            endDate: endDate.value,\n            allDay: allDaySwitch.value,\n            endTime: endTime.value,\n            fields: fields.value\n          }\n        }, {\n          headers: {\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\n          }\n        }).then(response => response.data).then(response => {\n          loading.value = false;\n          emit('created', response.task);\n          emit('close');\n        }).catch(response => {\n          error.value = true;\n          errorMsg.value = 'Der opstod en fejl - fejlkode: ' + response.response.status;\n          loading.value = false;\n        });\n      } else {\n        return false;\n      }\n    };\n    const __returned__ = {\n      emit,\n      startDate,\n      startTime,\n      endDate,\n      endTime,\n      title,\n      fields,\n      color,\n      allDaySwitch,\n      loading,\n      error,\n      errorMsg,\n      toggleAllDaySwitch,\n      setFields,\n      createTask,\n      ref,\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":"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","names":["ref","axios","startDate","startTime","endDate","endTime","title","fields","color","allDaySwitch","loading","error","errorMsg","toggleAllDaySwitch","value","setFields","getFields","console","log","createTask","post","task","allDay","headers","localStorage","getItem","then","response","data","emit","catch","status"],"sources":["/Users/khaled.el-moussa/Desktop/Projekter/Kal2/frontend/src/components/NewTask/CreateTask.vue"],"sourcesContent":["<template>\n  <div>\n    <PopUp boxClass=\"max-h-[80vh] min-h-[470px] flex\" :overflowY=\"true\" @close=\"$emit('close')\">\n      <Loader :loading=\"loading\"/>\n      <div class=\"h-full w-full relative flex flex-col justify-between\">\n        <div class=\"px-1 mt-2 relative\">\n          <ErrorMsg :error=\"error\" :message=\"errorMsg\" class=\"my-5\" />\n          <div class=\"flex items-end\">\n            <ColorPicker @color=\"(n) => color = n\" />\n            <input type=\"text\" id=\"title\" name=\"title\" v-model=\"title\" class=\"input-field-non-border ml-5\" placeholder=\"Tilføj titel\">\n          </div>\n          <div class=\"flex mt-4 items-center\">\n            <div class=\"h-16\">\n              <p class=\"font-inter text-[13px] text-gray-800 mb-1\">Opgave start</p>\n              <div class=\"-mx-1 flex items-center\">\n                <div class=\"w-32 px-1\">\n                  <DateButton :setMaxDate=\"endDate\" @date=\"(n) => startDate = n\"/>\n                </div>\n                <div class=\"w-24 px-1\" v-if=\"!allDaySwitch\">\n                  <TimeButton @time=\"(n) => startTime = n\" />\n                </div>\n              </div>\n            </div>\n            <div class=\"flex\">\n              <div class=\"mx-10 mt-5 text-gray-600 flex items-center text-sm font-light\">\n                til\n              </div>\n              <div>\n                <p class=\"font-inter text-[13px] text-gray-800 mb-1\">Opgave slut</p>\n                <div class=\"-mx-1 flex items-center\">\n                  <transition name=\"slide-fade\" class=\"h-9\">\n                    <div v-if=\"allDaySwitch\" class=\"w-32 px-1\">\n                      <DateButton :setMinDate=\"startDate\" datePickerPosition=\"right-[-20px]\" @date=\"(n) => endDate = n\"/>\n                    </div>\n                  </transition>\n                  <div class=\"w-24 px-1\" v-if=\"!allDaySwitch\">\n                    <TimeButton @time=\"(n) => endTime = n\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"flex gap-x-5\">\n            <SwitchButton title=\"Hele dagen\" @clicked=\"toggleAllDaySwitch\" />\n          </div>\n\n          <div class=\"mt-8\">\n            <FieldsContainer @taskFields=\"setFields\" />\n          </div>\n        </div>\n\n        <div class=\"mt-5\">\n          <button @click=\"createTask\" class=\"text-sm font-inter text-gray-700 font-medium py-3 px-5 rounded-md hover-transition\" :class=\"!loading ? 'bg-gray-200 hover:bg-primary hover:text-white' : 'bg-gray-400'\">\n          <span v-if=\"!loading\" class=\"flex items-center\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"4\" stroke=\"currentColor\" class=\"w-4 mr-[5px]\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M12 4.5v15m7.5-7.5h-15\" />\n            </svg>\n            Opret opgave\n          </span>\n            <span v-else class=\"flex items-center text-white\">\n            <img src=\"@/assets/images/loader.gif\" class=\"w-5 mr-2\" alt=\"loader\"/>\n            Indlæser...\n          </span>\n          </button>\n        </div>\n      </div>\n    </PopUp>\n  </div>\n</template>\n<script setup>\n  import { ref } from \"vue\";\n  import axios from \"axios\";\n\n  const emit = defineEmits(['close', 'created']);\n  const startDate = ref(null);\n  const startTime = ref(null);\n  const endDate = ref(null);\n  const endTime = ref(null);\n  const title = ref(null);\n  const fields = ref(null);\n  const color = ref('green');\n  const allDaySwitch = ref(false);\n  const loading = ref(false);\n  const error = ref(null);\n  const errorMsg = ref(null);\n\n  const toggleAllDaySwitch = () => {\n    allDaySwitch.value = !allDaySwitch.value;\n\n    if (allDaySwitch.value === true) {\n      startTime.value = null;\n      endTime.value = null;\n    }\n  }\n\n  const setFields = (getFields) => {\n    fields.value = getFields;\n    console.log(fields.value);\n  }\n\n  const createTask = async () => {\n    error.value = false;\n\n    if (startDate.value === null) {\n      error.value = true;\n      errorMsg.value = 'Vælg venligst en dato';\n    }\n\n    if (title.value === null) {\n      error.value = true;\n      errorMsg.value = 'Angiv venligst en overskrift';\n    }\n\n    if (!loading.value && !error.value) {\n      loading.value = true;\n\n      await axios.post('/task', {\n        task: {\n          title: title.value,\n          startDate: startDate.value,\n          startTime: startTime.value ? startTime.value : (allDaySwitch.value ? null : '00:00'),\n          color: color.value,\n          endDate: endDate.value,\n          allDay: allDaySwitch.value,\n          endTime: endTime.value,\n          fields: fields.value\n        }\n      }, {\n        headers: {\n          'Authorization': 'Bearer '+ localStorage.getItem('token')\n        }\n      }).then((response) => response.data).then((response) => {\n        loading.value = false;\n        emit('created', response.task);\n        emit('close');\n      }).catch((response) => {\n        error.value = true;\n        errorMsg.value = 'Der opstod en fejl - fejlkode: '+response.response.status;\n        loading.value = false;\n      });\n    } else {\n      return false;\n    }\n  }\n</script>\n<style lang=\"css\">\n  .slide-fade-enter-active {\n    transition: all 0.3s ease-out;\n  }\n\n  .slide-fade-enter-from,\n  .slide-fade-leave-to {\n    transform: translateX(-20px);\n    opacity: 0;\n  }\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}