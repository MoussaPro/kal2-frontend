{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"text-[12.5px] font-inter font-medium text-gray-700\"\n};\nconst _hoisted_2 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"span\", _hoisted_1, _toDisplayString($setup.title), 1 /* TEXT */), $setup.type !== 'beskrivelse' ? _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n    key: 0,\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.value = $event),\n    onBlur: _cache[1] || (_cache[1] = $event => _ctx.$emit('getField', {\n      title: $setup.title,\n      type: $setup.type,\n      value: $setup.value,\n      id: $setup.id\n    })),\n    class: \"block w-full pl-2 rounded shadow-sm mt-[2px] border border-gray-200 h-[32px] text-sm font-inter\"\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */)), [[_vModelText, $setup.value]]) : (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \"asd\"))]);\n}","map":{"version":3,"mappings":";;EAEUA,KAAK,EAAC;AAAoD;;;;;uBADlEC,oBAIM,cAHJC,oBAAmF,QAAnFC,UAAmF,mBAAfC,YAAK,kBAChCA,WAAI,oDAA7CH,oBAA+N;;IAAxNI,IAAI,EAAC,MAAM;+DAAUD,YAAK;IAAiCE,MAAI,sCAAEC,UAAK;MAAAC,OAAcJ,YAAK;MAAAC,MAAED,WAAI;MAAAK,OAAEL,YAAK;MAAAM,IAAEN;IAAE;IAAIJ,KAAK,EAAC;kEAA/FI,YAAK,qBACjCH,oBAAqB,mBAAT,KAAG","names":["class","_createElementBlock","_createElementVNode","_hoisted_1","$setup","type","onBlur","_ctx","title","value","id"],"sourceRoot":"","sources":["/Users/khaled.el-moussa/Desktop/Projekter/Kal2/frontend/src/components/DisplayField.vue"],"sourcesContent":["<template>\n  <div>\n    <span class=\"text-[12.5px] font-inter font-medium text-gray-700\">{{ title }}</span>\n    <input type=\"text\" v-model=\"value\" v-if=\"type !== 'beskrivelse'\" @blur=\"$emit('getField', {title, type, value, id})\" class=\"block w-full pl-2 rounded shadow-sm mt-[2px] border border-gray-200 h-[32px] text-sm font-inter\" />\n    <div v-else>asd</div>\n  </div>\n</template>\n<script setup>\n  import { ref } from \"vue\";\n  import fieldHandler from \"@/composables/fieldHandler\";\n\n  const { capitalizeString } = fieldHandler()\n\n  const props = defineProps({\n    field: Object\n  });\n\n  const id = props.field.id;\n  const title = capitalizeString(props.field.title);\n  const type = props.field.type;\n  const value = ref(props.field.value);\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}