{"ast":null,"code":"import { toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveDirective as _resolveDirective, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"relative\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"absolute mt-2 gap-x-2 flex\"\n};\nconst _hoisted_3 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _directive_click_outside = _resolveDirective(\"click-outside\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    class: _normalizeClass([\"w-24 h-10 rounded-md shadow-md hover-transition cursor-pointer hover:scale-[101%] hover:shadow-xl flex items-center justify-center text-sm font-inter font-medium\", $setup.activeColor.css]),\n    onClick: _cache[0] || (_cache[0] = $event => $setup.toggleColors = !$setup.toggleColors)\n  }, _toDisplayString($setup.activeColor.display), 3 /* TEXT, CLASS */), $setup.toggleColors ? _withDirectives((_openBlock(), _createElementBlock(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.colors, color => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: _normalizeClass([\"border border-gray-200\", [$setup.colorBlock, color.css]]),\n      onClick: $event => $setup.setActiveColor(color)\n    }, null, 10 /* CLASS, PROPS */, _hoisted_3);\n  }), 256 /* UNKEYED_FRAGMENT */))])), [[_directive_click_outside, $setup.hideColor]]) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;AAAU;;;EAIMA,KAAK,EAAC;;;;;uBAJjCC,oBAOM,OAPNC,UAOM,GANJC,oBAEM;IAFDH,KAAK,mBAAC,mKAAmK,EAASI,kBAAW,CAACC,GAAG;IAAGC,OAAK,sCAAEF,mBAAY,IAAIA,mBAAY;sBACvOA,kBAAW,CAACG,OAAO,yBAEbH,mBAAY,kCAAvBH,oBAEM,OAFNO,UAEM,sBADJP,oBAAkIQ,6BAA7GL,aAAM,EAAfM,KAAK;yBAAjBT,oBAAkI;MAArGD,KAAK,mBAAC,wBAAwB,GAAUI,iBAAU,EAAEM,KAAK,CAACL,GAAG;MAAIC,OAAK,YAAEF,qBAAc,CAACM,KAAK;;mEAD9CN,gBAAS","names":["class","_createElementBlock","_hoisted_1","_createElementVNode","$setup","css","onClick","display","_hoisted_2","_Fragment","color"],"sourceRoot":"","sources":["/Users/khaled.el-moussa/Desktop/Projekter/Kal2/frontend/src/components/ColorPicker.vue"],"sourcesContent":["<template>\n  <div class=\"relative\">\n    <div class=\"w-24 h-10 rounded-md shadow-md hover-transition cursor-pointer hover:scale-[101%] hover:shadow-xl flex items-center justify-center text-sm font-inter font-medium\" :class=\"activeColor.css\" @click=\"toggleColors = !toggleColors\">\n      {{ activeColor.display }}\n    </div>\n    <div v-if=\"toggleColors\" class=\"absolute mt-2 gap-x-2 flex\" v-click-outside=\"hideColor\">\n      <div v-for=\"color in colors\" class=\"border border-gray-200\" :class=\"[colorBlock, color.css]\" @click=\"setActiveColor(color)\"></div>\n    </div>\n  </div>\n</template>\n<script setup>\n  const props = defineProps({\n    color: {\n      type: Object,\n      default: {\n        name: 'green',\n        display: 'GrÃ¸n',\n        css: 'bg-primary text-white'\n      }\n    }\n  })\n\n  import colorHandler from \"@/composables/colorHandler\";\n  import { ref } from \"vue\";\n  const { colors } = colorHandler();\n  const colorBlock = 'w-10 h-10 rounded-md shadow-md hover-transition cursor-pointer hover:scale-[101%] hover:shadow-xl';\n  const activeColor = ref(props.color);\n\n  const toggleColors = ref(false);\n\n  const hideColor = () => {\n    toggleColors.value = false;\n  }\n\n  const setActiveColor = (color) => {\n    activeColor.value = color;\n    hideColor();\n  }\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}