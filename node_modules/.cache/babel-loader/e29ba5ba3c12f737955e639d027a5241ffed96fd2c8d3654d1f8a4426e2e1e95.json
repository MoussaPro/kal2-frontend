{"ast":null,"code":"import { useRoute } from \"vue-router/dist/vue-router\";\nimport { Auth } from \"@/store/auth\";\nimport { onErrorCaptured, ref, watch } from \"vue\";\nexport default {\n  __name: 'App',\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const auth = Auth();\n    const error = ref(false);\n    const route = useRoute();\n    onErrorCaptured(e => {\n      error.value = true;\n    });\n    watch(route, async (from, to) => {\n      error.value = false;\n    });\n    const __returned__ = {\n      auth,\n      error,\n      route,\n      get useRoute() {\n        return useRoute;\n      },\n      get Auth() {\n        return Auth;\n      },\n      onErrorCaptured,\n      ref,\n      watch\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":"AAME,SAASA,QAAQ,QAAQ,4BAA4B;AACrD,SAASC,IAAI,QAAQ,cAAc;AACnC,SAASC,eAAe,EAAEC,GAAG,EAAEC,KAAK,QAAQ,KAAK;;;;;;;IAEjD,MAAMC,IAAI,GAAGJ,IAAI,EAAE;IACnB,MAAMK,KAAK,GAAGH,GAAG,CAAC,KAAK,CAAC;IACxB,MAAMI,KAAK,GAAGP,QAAQ,EAAE;IAExBE,eAAe,CAAEM,CAAC,IAAK;MACrBF,KAAK,CAACG,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC;IAEFL,KAAK,CAACG,KAAK,EAAE,OAAOG,IAAI,EAAEC,EAAE,KAAK;MAC/BL,KAAK,CAACG,KAAK,GAAG,KAAK;IACrB,CAAC,CAAC","names":["useRoute","Auth","onErrorCaptured","ref","watch","auth","error","route","e","value","from","to"],"sources":["/Users/khaled.el-moussa/Desktop/Projekter/Kal2/frontend/src/App.vue"],"sourcesContent":["<template>\n  <Top v-if=\"!auth.check() && route.fullPath !== '/login' && route.fullPath !== '/register'\" />\n  <TopLogged v-if=\"auth.check()\" />\n  <router-view :key=\"route.fullPath\"></router-view>\n</template>\n<script setup>\n  import { useRoute } from \"vue-router/dist/vue-router\";\n  import { Auth } from \"@/store/auth\";\n  import { onErrorCaptured, ref, watch } from \"vue\";\n\n  const auth = Auth();\n  const error = ref(false);\n  const route = useRoute()\n\n  onErrorCaptured((e) => {\n    error.value = true;\n  });\n\n  watch(route, async (from, to) => {\n    error.value = false;\n  });\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}