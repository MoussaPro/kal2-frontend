{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, normalizeClass as _normalizeClass, withDirectives as _withDirectives, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, resolveDirective as _resolveDirective, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"relative\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  fill: \"none\",\n  viewBox: \"0 0 24 24\",\n  \"stroke-width\": \"2\",\n  stroke: \"currentColor\",\n  class: \"w-6 h-6 mr-2\"\n}, [/*#__PURE__*/_createElementVNode(\"path\", {\n  \"stroke-linecap\": \"round\",\n  \"stroke-linejoin\": \"round\",\n  d: \"M12 6v6h4.5m4.5 0a9 9 0 11-18 0 9 9 0 0118 0z\"\n})], -1 /* HOISTED */);\nconst _hoisted_3 = {\n  key: 0,\n  class: \"absolute shadow-md bg-gray-100 w-[150px] l font-inter text-sm mt-5 rounded hover-transition\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"w-0 h-0 border-[15px] absolute top-0 -mt-7 ml-2 border-l-transparent border-r-transparent border-t-transparent border-b-gray-100\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_5 = {\n  class: \"max-h-[200px] overflow-y-scroll z-[20] relative border-t-2 border-gray-100\"\n};\nconst _hoisted_6 = {\n  class: \"border-b border-gray-200 px-2 py-[5px] leading-none hover-transition hover:bg-primary hover:text-white cursor-pointer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _directive_click_outside = _resolveDirective(\"click-outside\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => $setup.toggleTimeDropdown = !$setup.toggleTimeDropdown),\n    class: _normalizeClass([\"w-full rounded-md shadow py-2 pl-3 font-inter text-left text-sm font-medium flex items-center hover-transition hover:bg-primary hover:border-primary hover:text-white group\", $setup.toggleTimeDropdown ? 'text-white bg-primary-Darker border border-primary-Darker1' : 'bg-gray-100 border border-gray-100 '])\n  }, [_hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.time = $event),\n    class: _normalizeClass([\"focus:outline-none w-10 bg-transparent group-hover:text-white\", $setup.toggleTimeDropdown ? 'text-white' : 'text-black'])\n  }, null, 2 /* CLASS */), [[_vModelText, $setup.time]]), _createTextVNode(\" \" + _toDisplayString($setup.correctTime), 1 /* TEXT */)], 2 /* CLASS */), $setup.toggleTimeDropdown ? _withDirectives((_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_hoisted_4, _createElementVNode(\"div\", _hoisted_5, [(_openBlock(), _createElementBlock(_Fragment, null, _renderList($setup.times, time => {\n    return _createElementVNode(\"div\", _hoisted_6, _toDisplayString(time), 1 /* TEXT */);\n  }), 64 /* STABLE_FRAGMENT */))])])), [[_directive_click_outside, $setup.hideTimeDropdown]]) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;AAAU;gCAEjBC,oBAEM;EAFDC,KAAK,EAAC,4BAA4B;EAACC,IAAI,EAAC,MAAM;EAACC,OAAO,EAAC,WAAW;EAAC,cAAY,EAAC,GAAG;EAACC,MAAM,EAAC,cAAc;EAACL,KAAK,EAAC;iBACnHC,oBAAyG;EAAnG,gBAAc,EAAC,OAAO;EAAC,iBAAe,EAAC,OAAO;EAACK,CAAC,EAAC;;;;EAKtDN,KAAK,EAAC;;gCACTC,oBAAoJ;EAA/ID,KAAK,EAAC;AAAkI;;EACxIA,KAAK,EAAC;AAA4E;;EAChFA,KAAK,EAAC;AAAuH;;;uBAXxIO,oBAcM,OAdNC,UAcM,GAbJP,oBAMS;IANAQ,OAAK,sCAAEC,yBAAkB,IAAIA,yBAAkB;IAAEV,KAAK,mBAAC,6KAA6K,EAASU,yBAAkB;MACtQC,UAEM,kBACNV,oBAAkK;IAA3JW,IAAI,EAAC,MAAM;+DAAUF,WAAI;IAAEV,KAAK,mBAAC,+DAA+D,EAASU,yBAAkB;0CAAtGA,WAAI,sBAAkI,GAClK,oBAAGA,kBAAW,mCAEkIA,yBAAkB,kCAApKH,oBAKM,OALNM,UAKM,GAJJC,UAAoJ,EACpJb,oBAEM,OAFNc,UAEM,kBADJR,oBAAyKS,6BAAvBN,YAAK,EAAbO,IAAI;WAA9IhB,oBAAyK,OAAzKiB,UAAyK,mBAAbD,IAAI;mEAH1CP,uBAAgB","names":["class","_createElementVNode","xmlns","fill","viewBox","stroke","d","_createElementBlock","_hoisted_1","onClick","$setup","_hoisted_2","type","_hoisted_3","_hoisted_4","_hoisted_5","_Fragment","time","_hoisted_6"],"sourceRoot":"","sources":["/Users/khaled.el-moussa/Desktop/Projekter/Kal2/frontend/src/components/Task/TimeButton.vue"],"sourcesContent":["<template>\n  <div class=\"relative\">\n    <button @click=\"toggleTimeDropdown = !toggleTimeDropdown\" class=\"w-full rounded-md shadow py-2 pl-3 font-inter text-left text-sm font-medium flex items-center hover-transition hover:bg-primary hover:border-primary hover:text-white group\" :class=\"toggleTimeDropdown ? 'text-white bg-primary-Darker border border-primary-Darker1' : 'bg-gray-100 border border-gray-100 '\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" class=\"w-6 h-6 mr-2\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M12 6v6h4.5m4.5 0a9 9 0 11-18 0 9 9 0 0118 0z\" />\n      </svg>\n      <input type=\"text\" v-model=\"time\" class=\"focus:outline-none w-10 bg-transparent group-hover:text-white\" :class=\"toggleTimeDropdown ? 'text-white' : 'text-black'\">\n      {{ correctTime }}\n    </button>\n    <div class=\"absolute shadow-md bg-gray-100 w-[150px] l font-inter text-sm mt-5 rounded hover-transition\" v-click-outside=\"hideTimeDropdown\" v-if=\"toggleTimeDropdown\">\n      <div class=\"w-0 h-0 border-[15px] absolute top-0 -mt-7 ml-2 border-l-transparent border-r-transparent border-t-transparent border-b-gray-100\"></div>\n      <div class=\"max-h-[200px] overflow-y-scroll z-[20] relative border-t-2 border-gray-100\">\n        <div class=\"border-b border-gray-200 px-2 py-[5px] leading-none hover-transition hover:bg-primary hover:text-white cursor-pointer\" v-for=\"time in times\">{{ time }}</div>\n      </div>\n    </div>\n  </div>\n</template>\n<script setup>\n  import { computed, ref } from \"vue\";\n\n  const toggleTimeDropdown = ref(false);\n  const time = ref('00:00');\n\n  const times = [\n      '00:00', '00:30', '01:00', '01:30', '02:00', '02:30', '03:00', '03:30', '04:00', '04:30', '05:00', '05:30', '06:00', '06:30', '07:00', '07:30', '08:00', '08:30'\n  ];\n\n  const correctTime = computed(() => {\n    const inputTime = time.value;\n    const regex = /^([0-9][0-9]:[0-9][0-9])/;\n    const valid = regex.exec(inputTime);\n\n    if (valid === null) {\n\n    } else {\n      return time.value;\n    }\n  });\n\n  const hideTimeDropdown = () => {\n    toggleTimeDropdown.value = false;\n  }\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}