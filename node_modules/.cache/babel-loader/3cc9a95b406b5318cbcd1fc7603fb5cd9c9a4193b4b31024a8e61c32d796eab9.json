{"ast":null,"code":"export default function timeHandler() {\n  // Define the heights on tasks in pixel depends on task length\n  const taskHeight = {\n    hour: 28,\n    // 3.5 REM\n    halfHour: 14,\n    // 1.75 REM\n    minute: 0.48 // 0.03 REM\n  };\n\n  const timeCalender = time => {\n    return time.slice(0, 5);\n  };\n\n  // Gets the difference between two hours in specified format\n  const diffBetweenTwoTimes = (start, end, format) => {\n    const startDate = new Date();\n    const endDate = new Date();\n    start = start.split(':');\n    end = end.split(':');\n    startDate.setHours(start[0], start[1], start[2], 0);\n    endDate.setHours(end[0], end[1], end[2], 0);\n    switch (format) {\n      case 'minutes':\n        return (endDate - startDate) / 60 / 1000;\n      case 'hours':\n        return (endDate - startDate) / 60 / 60 / 1000;\n      default:\n        return endDate - startDate;\n    }\n  };\n  const timeBoxBoolean = (timeBox, taskTime) => {\n    const diff = diffBetweenTwoTimes(taskTime, timeBox, 'minutes');\n\n    // Set to true if the task is inside the blocks minutes\n    if (diff >= 0 && diff <= 119) {\n      return diff === 0 ? true : diff;\n    }\n  };\n  return {\n    timeCalender,\n    diffBetweenTwoTimes,\n    taskHeight,\n    timeBoxBoolean\n  };\n}","map":{"version":3,"names":["timeHandler","taskHeight","hour","halfHour","minute","timeCalender","time","slice","diffBetweenTwoTimes","start","end","format","startDate","Date","endDate","split","setHours","timeBoxBoolean","timeBox","taskTime","diff"],"sources":["/Users/khaled.el-moussa/Desktop/Projekter/Kal2/frontend/src/composables/timeHandler.js"],"sourcesContent":["export default function timeHandler() {\n  // Define the heights on tasks in pixel depends on task length\n  const taskHeight = {\n    hour: 28, // 3.5 REM\n    halfHour: 14, // 1.75 REM\n    minute: 0.48 // 0.03 REM\n  };\n\n  const timeCalender = (time) => {\n    return time.slice(0, 5);\n  }\n\n  // Gets the difference between two hours in specified format\n  const diffBetweenTwoTimes = (start, end, format) => {\n    const startDate = new Date();\n    const endDate = new Date();\n\n    start = start.split(':');\n    end = end.split(':');\n\n    startDate.setHours(start[0], start[1], start[2], 0);\n    endDate.setHours(end[0], end[1], end[2], 0);\n\n    switch (format) {\n      case 'minutes':\n        return (endDate-startDate)/60/1000;\n      case 'hours':\n        return (endDate-startDate)/60/60/1000\n      default:\n        return endDate-startDate\n    }\n  }\n\n  const timeBoxBoolean = (timeBox, taskTime) => {\n    const diff = diffBetweenTwoTimes(taskTime, timeBox, 'minutes');\n\n    // Set to true if the task is inside the blocks minutes\n    if(diff >= 0 && diff <= 119) {\n      return diff === 0 ? true : diff;\n    }\n  }\n\n  return {\n    timeCalender,\n    diffBetweenTwoTimes,\n    taskHeight,\n    timeBoxBoolean\n  }\n}"],"mappings":"AAAA,eAAe,SAASA,WAAW,GAAG;EACpC;EACA,MAAMC,UAAU,GAAG;IACjBC,IAAI,EAAE,EAAE;IAAE;IACVC,QAAQ,EAAE,EAAE;IAAE;IACdC,MAAM,EAAE,IAAI,CAAC;EACf,CAAC;;EAED,MAAMC,YAAY,GAAIC,IAAI,IAAK;IAC7B,OAAOA,IAAI,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;EACzB,CAAC;;EAED;EACA,MAAMC,mBAAmB,GAAG,CAACC,KAAK,EAAEC,GAAG,EAAEC,MAAM,KAAK;IAClD,MAAMC,SAAS,GAAG,IAAIC,IAAI,EAAE;IAC5B,MAAMC,OAAO,GAAG,IAAID,IAAI,EAAE;IAE1BJ,KAAK,GAAGA,KAAK,CAACM,KAAK,CAAC,GAAG,CAAC;IACxBL,GAAG,GAAGA,GAAG,CAACK,KAAK,CAAC,GAAG,CAAC;IAEpBH,SAAS,CAACI,QAAQ,CAACP,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IACnDK,OAAO,CAACE,QAAQ,CAACN,GAAG,CAAC,CAAC,CAAC,EAAEA,GAAG,CAAC,CAAC,CAAC,EAAEA,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IAE3C,QAAQC,MAAM;MACZ,KAAK,SAAS;QACZ,OAAO,CAACG,OAAO,GAACF,SAAS,IAAE,EAAE,GAAC,IAAI;MACpC,KAAK,OAAO;QACV,OAAO,CAACE,OAAO,GAACF,SAAS,IAAE,EAAE,GAAC,EAAE,GAAC,IAAI;MACvC;QACE,OAAOE,OAAO,GAACF,SAAS;IAAA;EAE9B,CAAC;EAED,MAAMK,cAAc,GAAG,CAACC,OAAO,EAAEC,QAAQ,KAAK;IAC5C,MAAMC,IAAI,GAAGZ,mBAAmB,CAACW,QAAQ,EAAED,OAAO,EAAE,SAAS,CAAC;;IAE9D;IACA,IAAGE,IAAI,IAAI,CAAC,IAAIA,IAAI,IAAI,GAAG,EAAE;MAC3B,OAAOA,IAAI,KAAK,CAAC,GAAG,IAAI,GAAGA,IAAI;IACjC;EACF,CAAC;EAED,OAAO;IACLf,YAAY;IACZG,mBAAmB;IACnBP,UAAU;IACVgB;EACF,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}