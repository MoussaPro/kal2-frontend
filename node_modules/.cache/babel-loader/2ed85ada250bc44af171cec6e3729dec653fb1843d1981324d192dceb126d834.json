{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_TaskBox = _resolveComponent(\"TaskBox\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_TaskBox), _createElementVNode(\"div\", {\n    class: \"border rounded-md text-xs px-2 py-[2px] font-inter shadow relative hover-transition hover:opacity-75 cursor-pointer\",\n    style: _normalizeStyle($setup.styling)\n  }, _toDisplayString($props.task.title), 5 /* TEXT, STYLE */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;6DACEA,aAAWC,qBAEXC,oBAEM;IAFMC,KAAK,EAAC,qHAAqH;IAAEC,KAAK,kBAAEC,cAAO;sBAClJC,WAAI,CAACC,KAAK","names":["_createVNode","_component_TaskBox","_createElementVNode","class","style","$setup","$props","title"],"sourceRoot":"","sources":["/Users/khaled.el-moussa/Desktop/Projekter/Kal2/frontend/src/components/Calendar/Week/Task.vue"],"sourcesContent":["<template>\n  <TaskBox />\n  <!-- Single task -->\n  <div v-else class=\"border rounded-md text-xs px-2 py-[2px] font-inter shadow relative hover-transition hover:opacity-75 cursor-pointer\" :style=\"styling\">\n    {{ task.title }}\n  </div>\n</template>\n\n<script setup>\n  import timeHandler from \"@/composables/timeHandler\";\n  import { ref } from \"vue\";\n  import colorHandler from \"@/composables/colorHandler\";\n\n  const props = defineProps({\n    task: {\n      type: Object,\n      required: true\n    }\n  });\n\n  const { taskHeight, diffBetweenTwoTimes } = timeHandler();\n  const { getTaskColors } = colorHandler();\n  const openMoreTask = ref(false);\n\n  const calculateHeight = (start, end) => {\n    const diff = diffBetweenTwoTimes(start, end, 'minutes');\n    return diff*taskHeight.minute;\n  }\n\n  const styling = ref('');\n  if (!props.task.moreTask) {\n    const color = ref(getTaskColors(props.task.task_color));\n    styling.value = \"height: \" + calculateHeight(props.task.task_time, props.task.task_time_end) + \"px;\";\n    styling.value += \" margin-top:\" + (props.task.diff / 60) * taskHeight.hour + \"px;\";\n    styling.value += \" z-index:\" + props.task.task_time.slice(0, 2) + \";\";\n    styling.value += \" background-color:\" + color.value['background'] + \";\";\n    styling.value += \" color:\" + color.value['text'] + \";\";\n    styling.value += \" border-color:\" + color.value['border'] + \";\";\n  }\n\n  const styleMoreTask = (task) => {\n    const colorStyling = ref('');\n    const color = ref(getTaskColors(task.task_color));\n    colorStyling.value += \" background-color:\" + color.value['background'] + \";\";\n    colorStyling.value += \" color:\" + color.value['text'] + \";\";\n    colorStyling.value += \" border-color:\" + color.value['border'] + \";\";\n\n    return colorStyling;\n  }\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}