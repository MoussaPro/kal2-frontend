{"ast":null,"code":"import timeHandler from \"@/composables/timeHandler\";\nimport colorHandler from \"@/composables/colorHandler\";\nimport { ref } from \"vue\";\nexport default {\n  __name: 'TaskBox',\n  props: {\n    task: {\n      type: Object\n    },\n    // Should display more task\n    moreTask: {\n      type: Boolean,\n      default: false\n    },\n    // Inside a more task menu\n    subTask: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: ['openMoreTask'],\n  setup(__props, {\n    expose,\n    emit\n  }) {\n    expose();\n    const props = __props;\n    const {\n      taskHeight,\n      diffBetweenTwoTimes\n    } = timeHandler();\n    const {\n      getTaskColors\n    } = colorHandler();\n    const styling = ref('');\n    if (!props.moreTask) {\n      if (!props.subTask) {\n        styling.value = \"height: \" + diffBetweenTwoTimes(props.task.task_time, props.task.task_time_end, 'minutes') * taskHeight.minute + \"px;\";\n        styling.value += \" margin-top:\" + props.task.diff / 60 * taskHeight.hour + \"px;\";\n        styling.value += \" z-index:\" + props.task.task_time.slice(0, 2) + \";\";\n      } else {\n        styling.value = \"height: 100%;\";\n      }\n      const color = ref(getTaskColors(props.task.task_color));\n      styling.value += \" background-color:\" + color.value['background'] + \";\";\n      styling.value += \" color:\" + color.value['text'] + \";\";\n      styling.value += \" border-color:\" + color.value['border'] + \";\";\n    }\n    const openMoreTaskToggle = ref(false);\n    const openMoreTask = () => {\n      emit('openMoreTask');\n      return openMoreTaskToggle.value = !openMoreTaskToggle.value;\n    };\n    const __returned__ = {\n      props,\n      emit,\n      taskHeight,\n      diffBetweenTwoTimes,\n      getTaskColors,\n      styling,\n      openMoreTaskToggle,\n      openMoreTask,\n      timeHandler,\n      colorHandler,\n      ref\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":"AAuBE,OAAOA,WAAW,MAAM,2BAA2B;AACnD,OAAOC,YAAY,MAAM,4BAA4B;AACrD,SAASC,GAAG,QAAQ,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;IAkBzB,MAAM;MAAEC,UAAU;MAAEC;IAAoB,CAAC,GAAGJ,WAAW,EAAE;IACzD,MAAM;MAAEK;IAAc,CAAC,GAAGJ,YAAY,EAAE;IACxC,MAAMK,OAAO,GAAGJ,GAAG,CAAC,EAAE,CAAC;IAGvB,IAAI,CAACK,KAAK,CAACC,QAAQ,EAAE;MACnB,IAAI,CAACD,KAAK,CAACE,OAAO,EAAE;QAClBH,OAAO,CAACI,KAAK,GAAG,UAAU,GAAGN,mBAAmB,CAACG,KAAK,CAACI,IAAI,CAACC,SAAS,EAAEL,KAAK,CAACI,IAAI,CAACE,aAAa,EAAE,SAAS,CAAC,GAACV,UAAU,CAACW,MAAM,GAAG,KAAK;QACrIR,OAAO,CAACI,KAAK,IAAI,cAAc,GAAIH,KAAK,CAACI,IAAI,CAACI,IAAI,GAAG,EAAE,GAAIZ,UAAU,CAACa,IAAI,GAAG,KAAK;QAClFV,OAAO,CAACI,KAAK,IAAI,WAAW,GAAGH,KAAK,CAACI,IAAI,CAACC,SAAS,CAACK,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG;MACvE,CAAC,MAAM;QACLX,OAAO,CAACI,KAAK,GAAG,eAAe;MACjC;MACA,MAAMQ,KAAK,GAAGhB,GAAG,CAACG,aAAa,CAACE,KAAK,CAACI,IAAI,CAACQ,UAAU,CAAC,CAAC;MACvDb,OAAO,CAACI,KAAK,IAAI,oBAAoB,GAAGQ,KAAK,CAACR,KAAK,CAAC,YAAY,CAAC,GAAG,GAAG;MACvEJ,OAAO,CAACI,KAAK,IAAI,SAAS,GAAGQ,KAAK,CAACR,KAAK,CAAC,MAAM,CAAC,GAAG,GAAG;MACtDJ,OAAO,CAACI,KAAK,IAAI,gBAAgB,GAAGQ,KAAK,CAACR,KAAK,CAAC,QAAQ,CAAC,GAAG,GAAG;IACjE;IAEA,MAAMU,kBAAkB,GAAGlB,GAAG,CAAC,KAAK,CAAC;IACrC,MAAMmB,YAAY,GAAG,MAAM;MACzBC,IAAI,CAAC,cAAc,CAAC;MAEpB,OAAOF,kBAAkB,CAACV,KAAK,GAAG,CAACU,kBAAkB,CAACV,KAAK;IAC7D,CAAC","names":["timeHandler","colorHandler","ref","taskHeight","diffBetweenTwoTimes","getTaskColors","styling","props","moreTask","subTask","value","task","task_time","task_time_end","minute","diff","hour","slice","color","task_color","openMoreTaskToggle","openMoreTask","emit"],"sources":["/Users/khaled.el-moussa/Desktop/Projekter/Kal2/frontend/src/components/Calendar/TaskBox.vue"],"sourcesContent":["<template>\n  <div>\n    <div v-if=\"task.moreTask\" class=\"h-full relative z-50\">\n      <!-- More task component -->\n      <div class=\"border rounded-md h-full flex flex-col justify-between text-xs px-2 py-[2px] font-inter hover-transition hover:opacity-75 relative shadow bg-primary-Darker text-white border-primary font-bold cursor-pointer\"\n           :class=\"{'opacity-75 hover:opacity-50': openMoreTaskToggle}\"\n           @click=\"openMoreTask\">\n        {{ task.title }}\n        <div class=\"line-clamp-1 -mx-[2px]\" v-if=\"task.moreTask\">\n          <p class=\"inline mx-[2px] font-medium\" v-for=\"(task, i) in task.tasks\">\n            <span v-if=\"i !== 0\">| </span>\n            #{{ task.id }}\n          </p>\n        </div>\n      </div>\n    </div>\n\n    <div v-else class=\"border rounded-md text-xs px-2 py-[2px] font-inter shadow relative hover-transition hover:opacity-75 cursor-pointer\" :style=\"styling\">\n      {{ task.title }}\n    </div>\n  </div>\n</template>\n<script setup>\n  import timeHandler from \"@/composables/timeHandler\";\n  import colorHandler from \"@/composables/colorHandler\";\n  import { ref } from \"vue\";\n\n  const props = defineProps({\n    task: {\n      type: Object\n    },\n    // Should display more task\n    moreTask: {\n      type: Boolean,\n      default: false\n    },\n    // Inside a more task menu\n    subTask : {\n      type: Boolean,\n      default: false\n    }\n  });\n  const emit = defineEmits(['openMoreTask'])\n  const { taskHeight, diffBetweenTwoTimes } = timeHandler();\n  const { getTaskColors } = colorHandler();\n  const styling = ref('');\n\n\n  if (!props.moreTask) {\n    if (!props.subTask) {\n      styling.value = \"height: \" + diffBetweenTwoTimes(props.task.task_time, props.task.task_time_end, 'minutes')*taskHeight.minute + \"px;\";\n      styling.value += \" margin-top:\" + (props.task.diff / 60) * taskHeight.hour + \"px;\";\n      styling.value += \" z-index:\" + props.task.task_time.slice(0, 2) + \";\";\n    } else {\n      styling.value = \"height: 100%;\";\n    }\n    const color = ref(getTaskColors(props.task.task_color));\n    styling.value += \" background-color:\" + color.value['background'] + \";\";\n    styling.value += \" color:\" + color.value['text'] + \";\";\n    styling.value += \" border-color:\" + color.value['border'] + \";\";\n  }\n\n  const openMoreTaskToggle = ref(false);\n  const openMoreTask = () => {\n    emit('openMoreTask');\n\n    return openMoreTaskToggle.value = !openMoreTaskToggle.value;\n  }\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}