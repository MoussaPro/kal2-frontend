{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"h-full relative z-50\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"absolute hover-transition top-[50%] -translate-y-1/2 left-[105%] w-[200px] z-99 bg-gray-100 rounded-md px-2 shadow-2xl border border-gray-200\"\n};\nconst _hoisted_3 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_TaskBox = _resolveComponent(\"TaskBox\");\n  return _openBlock(), _createElementBlock(\"div\", null, [$props.task.moreTask ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_TaskBox, {\n    task: $props.task,\n    moreTask: $props.task.moreTask,\n    onOpenMoreTask: _cache[0] || (_cache[0] = $event => $setup.openMoreTask = !$setup.openMoreTask)\n  }, null, 8 /* PROPS */, [\"task\", \"moreTask\"]), _createCommentVNode(\" Tasks slider \"), $setup.openMoreTask ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.task.tasks, (task, index) => {\n    return _openBlock(), _createBlock(_component_TaskBox, {\n      task: task\n    }, null, 8 /* PROPS */, [\"task\"]);\n  }), 256 /* UNKEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createVNode(_component_TaskBox, {\n    task: $props.task,\n    moreTask: $props.task.moreTask\n  }, null, 8 /* PROPS */, [\"task\", \"moreTask\"])]))]);\n}","map":{"version":3,"mappings":";;;EAE8BA,KAAK,EAAC;;;;EAIzBA,KAAK,EAAC;;;;;;;uBALfC,oBAYM,cAXOC,WAAI,CAACC,QAAQ,kBAAxBF,oBAOM,OAPNG,UAOM,GANJC,aAA8FC;IAApFC,IAAI,EAAEL,WAAI;IAAGC,QAAQ,EAAED,WAAI,CAACC,QAAQ;IAAGK,cAAY,sCAAEC,mBAAY,IAAIA,mBAAY;iDAE3FC,qCAAqB,EAC4ID,mBAAY,kBAA7KR,oBAEM,OAFNU,UAEM,sBADJV,oBAA4DW,6BAAdV,WAAI,CAACW,KAAK,GAA1BN,IAAI,EAAEO,KAAK;yBAAzCC,aAA4DT;MAAlDC,IAAI,EAAEA;IAAI;8FAGxBN,oBAEM,oBADJI,aAAiDC;IAAvCC,IAAI,EAAEL,WAAI;IAAGC,QAAQ,EAAED,WAAI,CAACC","names":["class","_createElementBlock","$props","moreTask","_hoisted_1","_createVNode","_component_TaskBox","task","onOpenMoreTask","$setup","_createCommentVNode","_hoisted_2","_Fragment","tasks","index","_createBlock"],"sourceRoot":"","sources":["/Users/khaled.el-moussa/Desktop/Projekter/Kal2/frontend/src/components/Calendar/Week/Task.vue"],"sourcesContent":["<template>\n  <div>\n    <div v-if=\"task.moreTask\" class=\"h-full relative z-50\">\n      <TaskBox :task=\"task\" :moreTask=\"task.moreTask\" @openMoreTask=\"openMoreTask = !openMoreTask\"/>\n\n      <!-- Tasks slider -->\n      <div class=\"absolute hover-transition top-[50%] -translate-y-1/2 left-[105%] w-[200px] z-99 bg-gray-100 rounded-md px-2 shadow-2xl border border-gray-200\" v-if=\"openMoreTask\">\n        <TaskBox :task=\"task\" v-for=\"(task, index) in task.tasks\" />\n      </div>\n    </div>\n    <div v-else>\n      <TaskBox :task=\"task\" :moreTask=\"task.moreTask\"/>\n    </div>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from \"vue\";\n\n  const props = defineProps({\n    task: {\n      type: Object,\n      required: true\n    }\n  });\n\n  const openMoreTask = ref(false);\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}