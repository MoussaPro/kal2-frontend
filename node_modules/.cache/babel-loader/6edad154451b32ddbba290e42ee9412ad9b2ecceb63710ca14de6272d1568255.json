{"ast":null,"code":"import timeHandler from \"@/composables/timeHandler\";\nimport { ref } from \"vue\";\nimport colorHandler from \"@/composables/colorHandler\";\nexport default {\n  __name: 'Task',\n  props: {\n    task: {\n      type: Object,\n      required: true\n    }\n  },\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const props = __props;\n    const {\n      taskHeight,\n      diffBetweenTwoTimes\n    } = timeHandler();\n    const {\n      getTaskColors\n    } = colorHandler();\n    const openMoreTask = ref(false);\n    const calculateHeight = (start, end) => {\n      const diff = diffBetweenTwoTimes(start, end, 'minutes');\n      return diff * taskHeight.minute;\n    };\n    const styling = ref('');\n    if (!props.task.moreTask) {\n      const color = ref(getTaskColors(props.task.task_color));\n      styling.value = \"height: \" + calculateHeight(props.task.task_time, props.task.task_time_end) + \"px;\";\n      styling.value += \" margin-top:\" + props.task.diff / 60 * taskHeight.hour + \"px;\";\n      styling.value += \" background-color:\" + color.value['background'] + \";\";\n      styling.value += \" color:\" + color.value['text'] + \";\";\n      styling.value += \" border-color:\" + color.value['border'] + \";\";\n      styling.value += \" z-index:\" + props.task.task_time.slice(0, 2) + \";\";\n    }\n    const __returned__ = {\n      props,\n      taskHeight,\n      diffBetweenTwoTimes,\n      getTaskColors,\n      openMoreTask,\n      calculateHeight,\n      styling,\n      timeHandler,\n      ref,\n      colorHandler\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":"AAqBE,OAAOA,WAAW,MAAM,2BAA2B;AACnD,SAASC,GAAG,QAAQ,KAAK;AACzB,OAAOC,YAAY,MAAM,4BAA4B;;;;;;;;;;;;;;IASrD,MAAM;MAAEC,UAAU;MAAEC;IAAoB,CAAC,GAAGJ,WAAW,EAAE;IACzD,MAAM;MAAEK;IAAc,CAAC,GAAGH,YAAY,EAAE;IACxC,MAAMI,YAAY,GAAGL,GAAG,CAAC,KAAK,CAAC;IAE/B,MAAMM,eAAe,GAAG,CAACC,KAAK,EAAEC,GAAG,KAAK;MACtC,MAAMC,IAAI,GAAGN,mBAAmB,CAACI,KAAK,EAAEC,GAAG,EAAE,SAAS,CAAC;MACvD,OAAOC,IAAI,GAACP,UAAU,CAACQ,MAAM;IAC/B,CAAC;IAED,MAAMC,OAAO,GAAGX,GAAG,CAAC,EAAE,CAAC;IACvB,IAAI,CAACY,KAAK,CAACC,IAAI,CAACC,QAAQ,EAAE;MACxB,MAAMC,KAAK,GAAGf,GAAG,CAACI,aAAa,CAACQ,KAAK,CAACC,IAAI,CAACG,UAAU,CAAC,CAAC;MACvDL,OAAO,CAACM,KAAK,GAAG,UAAU,GAAGX,eAAe,CAACM,KAAK,CAACC,IAAI,CAACK,SAAS,EAAEN,KAAK,CAACC,IAAI,CAACM,aAAa,CAAC,GAAG,KAAK;MACpGR,OAAO,CAACM,KAAK,IAAI,cAAc,GAAIL,KAAK,CAACC,IAAI,CAACJ,IAAI,GAAG,EAAE,GAAIP,UAAU,CAACkB,IAAI,GAAG,KAAK;MAClFT,OAAO,CAACM,KAAK,IAAI,oBAAoB,GAAGF,KAAK,CAACE,KAAK,CAAC,YAAY,CAAC,GAAG,GAAG;MACvEN,OAAO,CAACM,KAAK,IAAI,SAAS,GAAGF,KAAK,CAACE,KAAK,CAAC,MAAM,CAAC,GAAG,GAAG;MACtDN,OAAO,CAACM,KAAK,IAAI,gBAAgB,GAAGF,KAAK,CAACE,KAAK,CAAC,QAAQ,CAAC,GAAG,GAAG;MAC/DN,OAAO,CAACM,KAAK,IAAI,WAAW,GAAGL,KAAK,CAACC,IAAI,CAACK,SAAS,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG;IACvE","names":["timeHandler","ref","colorHandler","taskHeight","diffBetweenTwoTimes","getTaskColors","openMoreTask","calculateHeight","start","end","diff","minute","styling","props","task","moreTask","color","task_color","value","task_time","task_time_end","hour","slice"],"sources":["/Users/khaled.el-moussa/Desktop/Projekter/Kal2/frontend/src/components/Calendar/Week/Task.vue"],"sourcesContent":["<template>\n  <div v-if=\"task.moreTask\" class=\"h-full hover-transition hover:opacity-75 z-50\">\n    <div class=\"border rounded-md h-full flex flex-col justify-between text-xs px-2 py-[2px] font-inter shadow bg-primary-Darker text-white border-primary font-bold\" @click=\"openMoreTask = true\">\n      {{ task.title }}\n      <div class=\"line-clamp-1 -mx-[2px]\" v-if=\"task.moreTask\">\n        <p class=\"inline mx-[2px] font-medium\" v-for=\"(task, i) in task.tasks\">\n          <span v-if=\"i !== 0\">| </span>\n          #{{ task.id }}\n        </p>\n      </div>\n    </div>\n\n    <div class=\"\">asd</div>\n  </div>\n\n  <div v-else class=\"border rounded-md text-xs px-2 py-[2px] font-inter shadow relative z-50 hover-transition hover:opacity-75\" :class=\"task.task_color\" :style=\"styling\">\n    {{ task.title }}\n  </div>\n</template>\n\n<script setup>\n  import timeHandler from \"@/composables/timeHandler\";\n  import { ref } from \"vue\";\n  import colorHandler from \"@/composables/colorHandler\";\n\n  const props = defineProps({\n    task: {\n      type: Object,\n      required: true\n    }\n  });\n\n  const { taskHeight, diffBetweenTwoTimes } = timeHandler();\n  const { getTaskColors } = colorHandler();\n  const openMoreTask = ref(false);\n\n  const calculateHeight = (start, end) => {\n    const diff = diffBetweenTwoTimes(start, end, 'minutes');\n    return diff*taskHeight.minute;\n  }\n\n  const styling = ref('');\n  if (!props.task.moreTask) {\n    const color = ref(getTaskColors(props.task.task_color));\n    styling.value = \"height: \" + calculateHeight(props.task.task_time, props.task.task_time_end) + \"px;\";\n    styling.value += \" margin-top:\" + (props.task.diff / 60) * taskHeight.hour + \"px;\";\n    styling.value += \" background-color:\" + color.value['background'] + \";\";\n    styling.value += \" color:\" + color.value['text'] + \";\";\n    styling.value += \" border-color:\" + color.value['border'] + \";\";\n    styling.value += \" z-index:\" + props.task.task_time.slice(0, 2) + \";\";\n  }\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}