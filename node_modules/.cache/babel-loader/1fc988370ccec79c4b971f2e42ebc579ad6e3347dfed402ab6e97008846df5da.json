{"ast":null,"code":"import { toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([\"border border-red-600 rounded-md text-white text-xs px-2 py-[2px] font-inter shadow relative z-50\", _ctx.task.task_color]),\n    style: _normalizeStyle(_ctx.styling),\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.task.moreTask ? _ctx.openModel(_ctx.task.id) : '')\n  }, _toDisplayString(_ctx.task.title), 7 /* TEXT, CLASS, STYLE */);\n}","map":{"version":3,"mappings":";;uBACEA,oBAKM;IALDC,KAAK,mBAAC,mGAAmG,EAClGC,SAAI,CAACC,UAAU;IACtBC,KAAK,kBAAEF,YAAO;IACdG,OAAK,sCAAEH,SAAI,CAACI,QAAQ,GAAGJ,cAAS,CAACA,SAAI,CAACK,EAAE;sBACpCL,SAAI,CAACM,KAAK","names":["_createElementBlock","class","_ctx","task_color","style","onClick","moreTask","id","title"],"sourceRoot":"","sources":["/Users/khaled.el-moussa/Desktop/Projekter/Kal2/frontend/src/components/Calendar/Task.vue"],"sourcesContent":["<template>\n  <div class=\"border border-red-600 rounded-md text-white text-xs px-2 py-[2px] font-inter shadow relative z-50\"\n      :class=\"task.task_color\"\n      :style=\"styling\"\n      @click=\"task.moreTask ? openModel(task.id) : ''\">\n        {{ task.title }}\n  </div>\n</template>\n\n<script setup>\n  import timeHandler from \"@/composables/timeHandler\";\n  import { ref } from \"vue\";\n  import colorHandler from \"@/composables/colorHandler\";\n\n  const props = defineProps({\n    task: {\n      type: Object,\n      required: true\n    }\n  });\n\n  const { taskHeight, diffBetweenTwoTimes } = timeHandler();\n  const {  defineTaskColor } = colorHandler();\n\n  const calculateHeight = (start, end) => {\n    const diff = diffBetweenTwoTimes(start, end, 'minutes');\n    return diff*taskHeight.minute;\n  }\n\n  const styling = ref('');\n\n  if (!props.task.moreTask) {\n    const color = ref(defineTaskColor(props.task.task_color));\n    styling.value = \"height: \"+calculateHeight(props.task.task_time, props.task.task_time_end)+\"px;\";\n    styling.value += \" margin-top:\"+(props.task.diff/60)*taskHeight.hour+\"px;\";\n    styling.value += \" background-color:\"+color.value['background']+\";\";\n    styling.value += \" border: 1px solid; border-color:\"+color.value['border']+\";\";\n    styling.value += \" z-index:\"+props.task.\n  }\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}