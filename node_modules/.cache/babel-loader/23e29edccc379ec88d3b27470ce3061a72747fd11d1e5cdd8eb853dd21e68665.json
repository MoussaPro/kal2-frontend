{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"flex items-center justify-between p-2\"\n};\nconst _hoisted_2 = {\n  class: \"font-inter text-[13px] font-medium bg-gray-200 border leading-none border-gray-200 px-2 py-1 rounded flex items-center\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  fill: \"none\",\n  viewBox: \"0 0 24 24\",\n  \"stroke-width\": \"2\",\n  stroke: \"currentColor\",\n  class: \"w-4 mt-[1px] ml-1\"\n}, [/*#__PURE__*/_createElementVNode(\"path\", {\n  \"stroke-linecap\": \"round\",\n  \"stroke-linejoin\": \"round\",\n  d: \"M19.5 8.25l-7.5 7.5-7.5-7.5\"\n})], -1 /* HOISTED */);\nconst _hoisted_4 = {\n  class: \"grid grid-cols-2 bg-white gap-x-5 gap-y-4 p-2\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Loader = _resolveComponent(\"Loader\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([\"bg-gray-50 overflow-y-scroll relative max-h-[40vh] rounded-md\", {\n      'h-[200px]': $setup.loading\n    }])\n  }, [_createVNode(_component_Loader, {\n    loading: $setup.loading\n  }, null, 8 /* PROPS */, [\"loading\"]), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"p\", _hoisted_2, [_createTextVNode(_toDisplayString($setup.selectedField.title) + \" \", 1 /* TEXT */), _hoisted_3])]), _createElementVNode(\"div\", _hoisted_4, [$setup.selectedField ? (_openBlock(true), _createElementBlock(_Fragment, {\n    key: 0\n  }, _renderList(JSON.parse($setup.selectedField.fields), field => {\n    return _openBlock(), _createElementBlock(\"div\", null, [_createVNode($setup[\"DisplayField\"], {\n      field: field\n    }, null, 8 /* PROPS */, [\"field\"])]);\n  }), 256 /* UNKEYED_FRAGMENT */)) : _createCommentVNode(\"v-if\", true)])], 2 /* CLASS */);\n}","map":{"version":3,"mappings":";;EAGSA,KAAK,EAAC;AAAuC;;EAC7CA,KAAK,EAAC;AAAwH;gCAE/HC,oBAEM;EAFDC,KAAK,EAAC,4BAA4B;EAACC,IAAI,EAAC,MAAM;EAACC,OAAO,EAAC,WAAW;EAAC,cAAY,EAAC,GAAG;EAACC,MAAM,EAAC,cAAc;EAACL,KAAK,EAAC;iBACnHC,oBAAuF;EAAjF,gBAAc,EAAC,OAAO;EAAC,iBAAe,EAAC,OAAO;EAACK,CAAC,EAAC;;;EAIxDN,KAAK,EAAC;AAA+C;;;uBAV5DO,oBAeM;IAfDP,KAAK,mBAAC,+DAA+D;MAAA,aAAuBQ;IAAO;MACtGC,aAA4BC;IAAnBC,OAAO,EAAEH;EAAO,sCACzBP,oBAOM,OAPNW,UAOM,GANJX,oBAKI,KALJY,UAKI,qCAJCL,oBAAa,CAACM,KAAK,IAAG,GACzB,2BAEM,MAGVb,oBAIM,OAJNc,UAIM,GAHyDP,oBAAa,sBAA1ED,oBAEMS;IAAAC;EAAA,eAFeC,IAAI,CAACC,KAAK,CAACX,oBAAa,CAACY,MAAM,GAAxCC,KAAK;yBAAjBd,oBAEM,cADJE,aAA+BD;MAAhBa,KAAK,EAAEA;IAAK","names":["class","_createElementVNode","xmlns","fill","viewBox","stroke","d","_createElementBlock","$setup","_createVNode","_component_Loader","loading","_hoisted_1","_hoisted_2","title","_hoisted_4","_Fragment","key","JSON","parse","fields","field"],"sourceRoot":"","sources":["/Users/khaled.el-moussa/Desktop/Projekter/Kal2/frontend/src/components/NewTask/Fields/FieldsContainer.vue"],"sourcesContent":["<template>\n  <div class=\"bg-gray-50 overflow-y-scroll relative max-h-[40vh] rounded-md\" :class=\"{'h-[200px]': loading}\">\n    <Loader :loading=\"loading\"/>\n    <div class=\"flex items-center justify-between p-2\">\n      <p class=\"font-inter text-[13px] font-medium bg-gray-200 border leading-none border-gray-200 px-2 py-1 rounded flex items-center\">\n        {{ selectedField.title }}\n        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" class=\"w-4 mt-[1px] ml-1\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M19.5 8.25l-7.5 7.5-7.5-7.5\" />\n        </svg>\n      </p>\n    </div>\n    <div class=\"grid grid-cols-2 bg-white gap-x-5 gap-y-4 p-2\">\n      <div v-for=\"field in JSON.parse(selectedField.fields)\" v-if=\"selectedField\">\n        <DisplayField :field=\"field\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { computed, onMounted, ref } from \"vue\";\nimport axios from \"axios\";\nimport DisplayField from \"@/components/DisplayField\";\n\n  const props = defineProps({\n    jsonData: String\n  });\n\n  const apiData = ref();\n  const loading = ref();\n  const error = ref();\n  const selectedFieldId = ref(null);\n\n  const selectedField = computed(() => {\n    if (apiData.value) {\n      if (selectedFieldId.value === null) {\n        return apiData.value.filter(field => field.is_primary === 1)[0]\n      }\n    }\n  });\n\n  onMounted(() => {\n    try {\n      loading.value = true;\n      axios.get('/fields', {\n        headers: {\n          'Authorization': 'Bearer '+ localStorage.getItem('token')\n        }\n      }).then((response) => response.data).then((response) => {\n        apiData.value = response.fields;\n        loading.value = false;\n      }).catch((response) => {\n        error.value = response;\n      });\n    } catch(e) {\n      error.value = e;\n    }\n  });\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}