{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"relative\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ApiLoader = _resolveComponent(\"ApiLoader\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_ApiLoader, {\n    error: $setup.error,\n    loading: $setup.loading\n  }, null, 8 /* PROPS */, [\"error\", \"loading\"])]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;AAAU;;;uBAArBC,oBAGM,OAHNC,UAGM,GAFJC,aAA+CC;IAAnCC,KAAK,EAAEC,YAAK;IAAGC,OAAO,EAAED","names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_ApiLoader","error","$setup","loading"],"sourceRoot":"","sources":["/Users/khaled.el-moussa/Desktop/Projekter/Kal2/frontend/src/views/Edit/Field.vue"],"sourcesContent":["<template>\n  <div class=\"relative\">\n    <ApiLoader :error=\"error\" :loading=\"loading\" />\n\n  </div>\n</template>\n<script setup>\n  import { useRoute } from \"vue-router/dist/vue-router\";\n  import { ref } from \"vue\";\n  import axios from \"axios\";\n  import { useRouter } from \"vue-router\";\n\n  const route = useRoute();\n  const router = useRouter();\n\n  console.log(router.currentRoute.value.params.id);\n\n  const field = ref();\n  const loading = ref(true);\n  const error = ref();\n\n  try {\n    axios.get('/field/'+route.params.id, {\n      headers: {\n        'Authorization': 'Bearer '+ localStorage.getItem('token')\n      }\n    }).then((response) => response.data).then((response) => {\n      field.value = response;\n      loading.value = false;\n    }).catch((response) => {\n      error.value = response;\n      route\n    });\n  } catch(e) {\n    error.value = e;\n  }\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}