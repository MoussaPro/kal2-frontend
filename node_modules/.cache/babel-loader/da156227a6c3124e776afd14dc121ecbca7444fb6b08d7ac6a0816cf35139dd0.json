{"ast":null,"code":"import { computed, onMounted, ref } from \"vue\";\nimport axios from \"axios\";\nexport default {\n  __name: 'FieldsContainer',\n  props: {\n    jsonData: String\n  },\n  emits: ['taskFields'],\n  setup(__props, {\n    expose,\n    emit: emits\n  }) {\n    expose();\n    const props = __props;\n    const apiData = ref();\n    const loading = ref();\n    const error = ref();\n    const selectedFieldId = ref(null);\n    const toggleTemplates = ref();\n    const selectedField = computed(() => {\n      if (apiData.value) {\n        // If no selected field set the primary\n        if (selectedFieldId.value === null) {\n          const primaryField = apiData.value.filter(field => field.is_primary === 1)[0];\n          if (!primaryField) {\n            // If no primary, set the first one\n            return apiData.value[0];\n          }\n          return primaryField;\n        } else {\n          // If selected field\n          return apiData.value.filter(field => field.id === selectedFieldId.value)[0];\n        }\n      }\n    });\n    const hideToggleTemplates = () => {\n      if (toggleTemplates.value) {\n        toggleTemplates.value = false;\n      }\n    };\n    const setFieldId = field_id => {\n      selectedFieldId.value = field_id;\n      toggleTemplates.value = false; // Hide dropdown after selected\n    };\n\n    const updateField = (updatedField, field_id) => {\n      let array = JSON.parse(selectedField.value.fields);\n      array.forEach(field => {\n        if (field.id === field_id) {\n          field.value = updatedField.value;\n        }\n      });\n      selectedField.value.fields = JSON.stringify(array);\n      emits('taskFields', selectedField.value.fields);\n    };\n    onMounted(() => {\n      try {\n        loading.value = true;\n        axios.get('/fields', {\n          headers: {\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\n          }\n        }).then(response => response.data).then(response => {\n          apiData.value = response.fields;\n          loading.value = false;\n        }).catch(response => {\n          error.value = response;\n        });\n      } catch (e) {\n        error.value = e;\n      }\n    });\n    const __returned__ = {\n      props,\n      apiData,\n      loading,\n      error,\n      selectedFieldId,\n      toggleTemplates,\n      emits,\n      selectedField,\n      hideToggleTemplates,\n      setFieldId,\n      updateField,\n      computed,\n      onMounted,\n      ref,\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":"AAgCE,SAASA,QAAQ,EAAEC,SAAS,EAAEC,GAAG,QAAQ,KAAK;AAC9C,OAAOC,KAAK,MAAM,OAAO;;;;;;;;;;;;;IAMzB,MAAMC,OAAO,GAAGF,GAAG,EAAE;IACrB,MAAMG,OAAO,GAAGH,GAAG,EAAE;IACrB,MAAMI,KAAK,GAAGJ,GAAG,EAAE;IACnB,MAAMK,eAAe,GAAGL,GAAG,CAAC,IAAI,CAAC;IACjC,MAAMM,eAAe,GAAGN,GAAG,EAAE;IAG7B,MAAMO,aAAa,GAAGT,QAAQ,CAAC,MAAM;MACnC,IAAII,OAAO,CAACM,KAAK,EAAE;QACjB;QACA,IAAIH,eAAe,CAACG,KAAK,KAAK,IAAI,EAAE;UAClC,MAAMC,YAAY,GAAGP,OAAO,CAACM,KAAK,CAACE,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACC,UAAU,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;UAC7E,IAAI,CAACH,YAAY,EAAE;YACjB;YACA,OAAOP,OAAO,CAACM,KAAK,CAAC,CAAC,CAAC;UACzB;UAEA,OAAOC,YAAY;QACrB,CAAC,MAAM;UACL;UACA,OAAOP,OAAO,CAACM,KAAK,CAACE,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACE,EAAE,KAAKR,eAAe,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC;QAC7E;MACF;IACF,CAAC,CAAC;IAEF,MAAMM,mBAAmB,GAAG,MAAM;MAChC,IAAIR,eAAe,CAACE,KAAK,EAAE;QACzBF,eAAe,CAACE,KAAK,GAAG,KAAK;MAC/B;IACF,CAAC;IAED,MAAMO,UAAU,GAAIC,QAAQ,IAAK;MAC7BX,eAAe,CAACG,KAAK,GAAGQ,QAAQ;MAChCV,eAAe,CAACE,KAAK,GAAG,KAAK,CAAC,CAAC;IACnC,CAAC;;IAED,MAAMS,WAAW,GAAG,CAACC,YAAY,EAAEF,QAAQ,KAAK;MAC9C,IAAIG,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACd,aAAa,CAACC,KAAK,CAACc,MAAM,CAAC;MAClDH,KAAK,CAACI,OAAO,CAACZ,KAAK,IAAI;QACrB,IAAIA,KAAK,CAACE,EAAE,KAAKG,QAAQ,EAAE;UACzBL,KAAK,CAACH,KAAK,GAAGU,YAAY,CAACV,KAAK;QAClC;MACF,CAAC,CAAC;MACFD,aAAa,CAACC,KAAK,CAACc,MAAM,GAAGF,IAAI,CAACI,SAAS,CAACL,KAAK,CAAC;MAClDM,KAAK,CAAC,YAAY,EAAElB,aAAa,CAACC,KAAK,CAACc,MAAM,CAAC;IACjD,CAAC;IAEDvB,SAAS,CAAC,MAAM;MACd,IAAI;QACFI,OAAO,CAACK,KAAK,GAAG,IAAI;QACpBP,KAAK,CAACyB,GAAG,CAAC,SAAS,EAAE;UACnBC,OAAO,EAAE;YACP,eAAe,EAAE,SAAS,GAAEC,YAAY,CAACC,OAAO,CAAC,OAAO;UAC1D;QACF,CAAC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAACF,IAAI,CAAEC,QAAQ,IAAK;UACtD7B,OAAO,CAACM,KAAK,GAAGuB,QAAQ,CAACT,MAAM;UAC/BnB,OAAO,CAACK,KAAK,GAAG,KAAK;QACvB,CAAC,CAAC,CAACyB,KAAK,CAAEF,QAAQ,IAAK;UACrB3B,KAAK,CAACI,KAAK,GAAGuB,QAAQ;QACxB,CAAC,CAAC;MACJ,CAAC,CAAC,OAAMG,CAAC,EAAE;QACT9B,KAAK,CAACI,KAAK,GAAG0B,CAAC;MACjB;IACF,CAAC,CAAC","names":["computed","onMounted","ref","axios","apiData","loading","error","selectedFieldId","toggleTemplates","selectedField","value","primaryField","filter","field","is_primary","id","hideToggleTemplates","setFieldId","field_id","updateField","updatedField","array","JSON","parse","fields","forEach","stringify","emits","get","headers","localStorage","getItem","then","response","data","catch","e"],"sources":["/Users/khaled.el-moussa/Desktop/Projekter/Kal2/frontend/src/components/NewTask/Fields/FieldsContainer.vue"],"sourcesContent":["<template>\n  <div class=\"bg-gray-50 relative border border-gray-100 rounded-md\" :class=\"{'h-[200px]': loading}\">\n    <Loader :loading=\"loading\"/>\n    <div class=\"flex justify-center\">\n      <div class=\"mx-auto relative\">\n        <p class=\"font-inter text-[14px] text-gray-700 w-[200px] justify-center bg-gray-100 px-5 pt-1 pb-2 leading-none rounded-b-lg inline-flex text-center items-center hover-transition cursor-pointer hover:bg-gray-200\" @click=\"toggleTemplates = !toggleTemplates\">\n          {{ selectedField.title }}\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" class=\"w-4 mt-[1px] ml-1\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M19.5 8.25l-7.5 7.5-7.5-7.5\" />\n          </svg>\n        </p>\n        <div class=\"absolute left-0 top-[35px] w-[200px] font-inter text-[14px] text-gray-700 z-20 bg-gray-100 rounded-md shadow-sm border border-gray-200\" v-if=\"toggleTemplates\" v-click-outside=\"hideToggleTemplates\">\n          <div class=\"p-1 text-center hover-transition hover:bg-gray-200 cursor-pointer border-b border-gray-200\" :class=\"{'bg-gray-400': field.id === selectedField.id}\" @click=\"setFieldId(field.id)\" v-for=\"(field, index) in apiData\">{{ field.title }}</div>\n        </div>\n      </div>\n    </div>\n    <div class=\"max-h-[40vh] relative overflow-y-scroll\" v-if=\"selectedField\">\n      <div class=\"grid grid-cols-2 bg-gray-50 gap-x-5 gap-y-4 px-2 pb-4 mt-3\">\n        <div v-for=\"field in JSON.parse(selectedField.fields)\" :key=\"field\" v-if=\"selectedField\">\n          <DisplayField :field=\"field\" @getField=\"updatedField => updateField(updatedField, field.id)\"/>\n        </div>\n      </div>\n    </div>\n    <div class=\"flex flex-col items-center justify-center py-8 text-gray-600 font-inter\" v-else>\n      <img src=\"@/assets/images/empty.png\" class=\"w-[100px]\" alt=\"Empty icon\"/>\n      <div class=\"text-[13.5px] mt-2 font-light\">Ingen skabeloner blev fundet</div>\n      <RouterLink to=\"/new/field\" class=\"bg-gray-700 text-white text-[13px] mt-3 px-5 py-2 rounded-md hover-transition hover:bg-gray-600\">Opret skabelon</RouterLink>\n    </div>\n  </div>\n</template>\n\n<script setup>\n  import { computed, onMounted, ref } from \"vue\";\n  import axios from \"axios\";\n\n  const props = defineProps({\n    jsonData: String\n  });\n\n  const apiData = ref();\n  const loading = ref();\n  const error = ref();\n  const selectedFieldId = ref(null);\n  const toggleTemplates = ref();\n  const emits = defineEmits(['taskFields'])\n\n  const selectedField = computed(() => {\n    if (apiData.value) {\n      // If no selected field set the primary\n      if (selectedFieldId.value === null) {\n        const primaryField = apiData.value.filter(field => field.is_primary === 1)[0];\n        if (!primaryField) {\n          // If no primary, set the first one\n          return apiData.value[0];\n        }\n\n        return primaryField;\n      } else {\n        // If selected field\n        return apiData.value.filter(field => field.id === selectedFieldId.value)[0];\n      }\n    }\n  });\n\n  const hideToggleTemplates = () => {\n    if (toggleTemplates.value) {\n      toggleTemplates.value = false;\n    }\n  }\n\n  const setFieldId = (field_id) => {\n      selectedFieldId.value = field_id;\n      toggleTemplates.value = false; // Hide dropdown after selected\n  }\n\n  const updateField = (updatedField, field_id) => {\n    let array = JSON.parse(selectedField.value.fields)\n    array.forEach(field => {\n      if (field.id === field_id) {\n        field.value = updatedField.value\n      }\n    });\n    selectedField.value.fields = JSON.stringify(array);\n    emits('taskFields', selectedField.value.fields);\n  }\n\n  onMounted(() => {\n    try {\n      loading.value = true;\n      axios.get('/fields', {\n        headers: {\n          'Authorization': 'Bearer '+ localStorage.getItem('token')\n        }\n      }).then((response) => response.data).then((response) => {\n        apiData.value = response.fields;\n        loading.value = false;\n      }).catch((response) => {\n        error.value = response;\n      });\n    } catch(e) {\n      error.value = e;\n    }\n  });\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}