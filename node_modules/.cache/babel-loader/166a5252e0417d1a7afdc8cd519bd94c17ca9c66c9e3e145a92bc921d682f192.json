{"ast":null,"code":"import { ref } from \"vue\";\nimport fieldHandler from \"@/composables/fieldHandler\";\nimport Trumbowyg from 'vue-trumbowyg';\nimport 'trumbowyg/dist/ui/trumbowyg.css';\nexport default {\n  __name: 'CreateField',\n  props: {\n    type: String,\n    title: String,\n    value: String,\n    index: Number,\n    id: Number\n  },\n  emits: ['changes', 'delete'],\n  setup(__props, {\n    expose,\n    emit\n  }) {\n    expose();\n    const props = __props;\n    const {\n      capitalizeString\n    } = fieldHandler();\n    const fields = ref({\n      id: props.id,\n      type: props.type,\n      title: capitalizeString(props.title),\n      value: props.value\n    });\n    const trumConfig = {\n      btns: [['undo', 'redo'],\n      // Only supported in Blink browsers\n      ['formatting'], ['strong', 'em'], ['link'], ['justifyLeft', 'justifyCenter', 'justifyRight', 'justifyFull'], ['unorderedList', 'orderedList'], ['horizontalRule']],\n      tagClasses: {\n        h1: 'text-20' // Tailwind CSS example\n      }\n    };\n\n    const toggleType = ref(false);\n    const hideType = () => {\n      toggleType.value = false;\n    };\n    const chooseType = param => {\n      fields.value.type = param;\n      emitChanges();\n      hideType();\n    };\n    const emitChanges = () => {\n      console.log(fields.value);\n      emit('changes', fields.value);\n    };\n    const __returned__ = {\n      capitalizeString,\n      props,\n      emit,\n      fields,\n      trumConfig,\n      toggleType,\n      hideType,\n      chooseType,\n      emitChanges,\n      ref,\n      get fieldHandler() {\n        return fieldHandler;\n      },\n      get Trumbowyg() {\n        return Trumbowyg;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":"AA6CE,SAASA,GAAG,QAAQ,KAAK;AACzB,OAAOC,YAAY,MAAM,4BAA4B;AAErD,OAAOC,SAAS,MAAM,eAAe;AACrC,OAAO,iCAAiC;;;;;;;;;;;;;;;;;IAFxC,MAAM;MAAEC;IAAiB,CAAC,GAAGF,YAAY,EAAE;IAc3C,MAAMG,MAAM,GAAGJ,GAAG,CAAC;MACjBK,EAAE,EAAEC,KAAK,CAACD,EAAE;MACZE,IAAI,EAAED,KAAK,CAACC,IAAI;MAChBC,KAAK,EAAEL,gBAAgB,CAACG,KAAK,CAACE,KAAK,CAAC;MACpCC,KAAK,EAAEH,KAAK,CAACG;IACf,CAAC,CAAC;IAEF,MAAMC,UAAU,GAAG;MACjBC,IAAI,EAAE,CACJ,CAAC,MAAM,EAAE,MAAM,CAAC;MAAE;MAClB,CAAC,YAAY,CAAC,EACd,CAAC,QAAQ,EAAE,IAAI,CAAC,EAChB,CAAC,MAAM,CAAC,EACR,CAAC,aAAa,EAAE,eAAe,EAAE,cAAc,EAAE,aAAa,CAAC,EAC/D,CAAC,eAAe,EAAE,aAAa,CAAC,EAChC,CAAC,gBAAgB,CAAC,CACnB;MACDC,UAAU,EAAE;QACVC,EAAE,EAAE,SAAS,CAAE;MACjB;IACF,CAAC;;IAED,MAAMC,UAAU,GAAGd,GAAG,CAAC,KAAK,CAAC;IAE7B,MAAMe,QAAQ,GAAG,MAAM;MACrBD,UAAU,CAACL,KAAK,GAAG,KAAK;IAC1B,CAAC;IAED,MAAMO,UAAU,GAAIC,KAAK,IAAK;MAC5Bb,MAAM,CAACK,KAAK,CAACF,IAAI,GAAGU,KAAK;MACzBC,WAAW,EAAE;MACbH,QAAQ,EAAE;IACZ,CAAC;IAED,MAAMG,WAAW,GAAG,MAAM;MACxBC,OAAO,CAACC,GAAG,CAAChB,MAAM,CAACK,KAAK,CAAC;MACzBY,IAAI,CAAC,SAAS,EAAEjB,MAAM,CAACK,KAAK,CAAC;IAC/B,CAAC","names":["ref","fieldHandler","Trumbowyg","capitalizeString","fields","id","props","type","title","value","trumConfig","btns","tagClasses","h1","toggleType","hideType","chooseType","param","emitChanges","console","log","emit"],"sources":["/Users/khaled.el-moussa/Desktop/Projekter/Kal2/frontend/src/components/CreateField.vue"],"sourcesContent":["<template>\n  <div class=\"relative\">\n    <div v-if=\"index !== 0\" @click=\"$emit('delete', index)\" class=\"text-red-500 hover-transition hover:text-red-700 cursor-pointer absolute left-[-35px] top-[27px]\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" class=\"w-5\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\n      </svg>\n    </div>\n    <input type=\"text\" class=\"bg-gray-50 border-gray-200 border-2 border-dashed px-2 py-1 w-[200px] rounded text-[13px] text-gray-600 focus:outline-gray-300 focus:border-gray-300\" v-model=\"fields.title\" @blur=\"emitChanges\"/>\n    <div class=\"flex items-center mt-2\">\n      <input type=\"text\" class=\"border-gray-200 border rounded pl-2 w-full h-9 text-[13px] mr-2\" v-if=\"fields.type !== 'beskrivelse'\" placeholder=\"Standard værdi\" v-model=\"fields.value\" @blur=\"emitChanges\"/>\n      <div class=\"mr-2\" v-else>\n        <trumbowyg v-model=\"fields.value\" :config=\"trumConfig\" @blur=\"emitChanges\" class=\"form-control\" placeholder=\"Standard værdi\" name=\"content\"></trumbowyg>\n      </div>\n      <div class=\"relative\">\n        <div class=\"bg-gray-50 border-gray-200 border-2 h-9 text-[12px] w-[200px] rounded text-sm text-gray-700 cursor-pointer hover-transition hover:bg-gray-100 relative\" :class=\"toggleType ? 'font-semibold' : 'border-dashed'\" @click=\"toggleType = !toggleType\">\n          <span class=\"flex items-center justify-center h-full\" :class=\"fields.type ? 'capitalize font-medium' : 'normal-case'\">\n            {{ fields.type ? fields.type : 'Vælg type' }}\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" v-if=\"!fields.type\" class=\"w-4 mt-[1px] ml-1\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M19.5 8.25l-7.5 7.5-7.5-7.5\" />\n            </svg>\n          </span>\n        </div>\n        <div class=\"absolute left-0 top-[40px] w-[200px] bg-gray-50 z-20 rounded-md shadow-sm border border-gray-200\" v-click-outside=\"hideType\" v-if=\"toggleType\">\n          <div class=\"px-3 py-2 text-[12px] border-b border-gray-200 text-gray-600 tracking-[0.45px] font-medium cursor-pointer hover:bg-gray-200 hover-transition font-inter flex leading-none items-center\" @click=\"chooseType('tekst');\">\n            <img src=\"@/assets/images/icons/text.png\" class=\"w-[16px] mr-2\" alt=\"text icon\"/>\n            Tekst\n          </div>\n          <div class=\"px-3 py-2 text-[12px] border-b border-gray-200 text-gray-600 tracking-[0.45px] font-medium cursor-pointer hover:bg-gray-200 hover-transition font-inter flex leading-none items-center\" @click=\"chooseType('tal');\">\n            <img src=\"@/assets/images/icons/numbers.png\" class=\"w-[16px] mr-2\" alt=\"number icon\"/>\n            Tal\n          </div>\n          <div class=\"px-3 py-2 text-[12px] border-b border-gray-200 text-gray-600 tracking-[0.45px] font-medium cursor-pointer hover:bg-gray-200 hover-transition font-inter flex leading-none items-center\" @click=\"chooseType('valuta');\">\n            <img src=\"@/assets/images/icons/currency.png\" class=\"w-[14px] mr-2\" alt=\"number icon\"/>\n            Valuta\n          </div>\n          <div class=\"px-3 py-2 text-[12px] border-b border-gray-200 text-gray-600 tracking-[0.45px] font-medium cursor-pointer hover:bg-gray-200 hover-transition font-inter flex leading-none items-center\" @click=\"chooseType('beskrivelse');\">\n            <img src=\"@/assets/images/icons/description.png\" class=\"w-[14px] mr-2\" alt=\"number icon\"/>\n            Beskrivelse (Lang tekst)\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script setup>\n  import { ref } from \"vue\";\n  import fieldHandler from \"@/composables/fieldHandler\";\n  const { capitalizeString } = fieldHandler();\n  import Trumbowyg from 'vue-trumbowyg';\n  import 'trumbowyg/dist/ui/trumbowyg.css';\n\n  const props = defineProps({\n    type: String,\n    title: String,\n    value: String,\n    index: Number,\n    id: Number\n  });\n\n  const emit = defineEmits(['changes', 'delete'])\n\n  const fields = ref({\n    id: props.id,\n    type: props.type,\n    title: capitalizeString(props.title),\n    value: props.value\n  });\n\n  const trumConfig = {\n    btns: [\n      ['undo', 'redo'], // Only supported in Blink browsers\n      ['formatting'],\n      ['strong', 'em'],\n      ['link'],\n      ['justifyLeft', 'justifyCenter', 'justifyRight', 'justifyFull'],\n      ['unorderedList', 'orderedList'],\n      ['horizontalRule'],\n    ],\n    tagClasses: {\n      h1: 'text-20', // Tailwind CSS example\n    }\n  };\n\n  const toggleType = ref(false);\n\n  const hideType = () => {\n    toggleType.value = false;\n  }\n\n  const chooseType = (param) => {\n    fields.value.type = param;\n    emitChanges();\n    hideType();\n  }\n\n  const emitChanges = () => {\n    console.log(fields.value);\n    emit('changes', fields.value);\n  }\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}