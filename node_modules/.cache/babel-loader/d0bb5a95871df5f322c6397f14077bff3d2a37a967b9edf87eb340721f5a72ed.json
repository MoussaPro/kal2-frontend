{"ast":null,"code":"import { ref } from \"vue\";\nimport SwitchButton from \"@/components/SwitchButton\";\nimport { Auth } from \"@/store/auth\";\nimport axios from \"axios\";\nimport Loading from \"@/components/Suspense/Loading\";\nexport default {\n  __name: 'CreateTask',\n  emits: ['close', 'created'],\n  setup(__props, {\n    expose,\n    emit\n  }) {\n    expose();\n    const startDate = ref(null);\n    const startTime = ref(null);\n    const endDate = ref(null);\n    const endTime = ref(null);\n    const title = ref(null);\n    const color = ref('green');\n    const auth = Auth();\n    const endSwitch = ref(false);\n    const allDaySwitch = ref(false);\n    const loading = ref(false);\n    const error = ref(null);\n    const errorMsg = ref(null);\n    const toggleEndSwitch = () => {\n      endSwitch.value = !endSwitch.value;\n      if (endSwitch.value === false) {\n        endDate.value = null;\n        endTime.value = null;\n      }\n    };\n    const toggleAllDaySwitch = () => {\n      allDaySwitch.value = !allDaySwitch.value;\n      if (allDaySwitch.value === true) {\n        startTime.value = null;\n        endTime.value = null;\n      }\n    };\n    const createTask = async () => {\n      error.value = false;\n      if (startDate.value === null) {\n        error.value = true;\n        errorMsg.value = 'Vælg venligst en dato';\n      }\n      if (title.value === null) {\n        error.value = true;\n        errorMsg.value = 'Angiv venligst en overskrift';\n      }\n      if (!loading.value && !error.value) {\n        loading.value = true;\n        await axios.post('/task', {\n          task: {\n            title: title.value,\n            startDate: startDate.value,\n            startTime: startTime.value ? startTime.value : '00:00',\n            color: color.value,\n            endDate: endDate.value,\n            endTime: endTime.value\n          }\n        }, {\n          headers: {\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\n          }\n        }).then(response => response.data).then(response => {\n          loading.value = false;\n          emit('created', response.task);\n          emit('close');\n        }).catch(response => {\n          error.value = response;\n          errorMsg.value = 'Der opstod en fejl';\n          loading.value = false;\n        });\n      } else {\n        return false;\n      }\n    };\n    const __returned__ = {\n      emit,\n      startDate,\n      startTime,\n      endDate,\n      endTime,\n      title,\n      color,\n      auth,\n      endSwitch,\n      allDaySwitch,\n      loading,\n      error,\n      errorMsg,\n      toggleEndSwitch,\n      toggleAllDaySwitch,\n      createTask,\n      ref,\n      get SwitchButton() {\n        return SwitchButton;\n      },\n      get Auth() {\n        return Auth;\n      },\n      get axios() {\n        return axios;\n      },\n      get Loading() {\n        return Loading;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":"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","names":["ref","SwitchButton","Auth","axios","Loading","startDate","startTime","endDate","endTime","title","color","auth","endSwitch","allDaySwitch","loading","error","errorMsg","toggleEndSwitch","value","toggleAllDaySwitch","createTask","post","task","headers","localStorage","getItem","then","response","data","emit","catch"],"sources":["/Users/khaled.el-moussa/Desktop/Projekter/Kal2/frontend/src/components/Task/CreateTask.vue"],"sourcesContent":["<template>\n  <div>\n    <PopUp boxClass=\"max-h-[700px]\" :overflowY=\"true\" @close=\"$emit('close')\">\n      <div class=\"w-full h-full z-10 bg-gray-200 absolute left-0 top-0 flex items-center justify-center hover-transition\" v-if=\"loading\">\n        <div class=\"text-center text-lg text-gray-600\">\n          <img src=\"@/assets/images/loader.gif\" class=\"w-20 mb-3 mx-auto\" alt=\"loader\"/>\n          Indlæser...\n        </div>\n      </div>\n      <div class=\"px-1 mt-2 relative\">\n        <div class=\"bg-red-500 text-xs px-5 w-full rounded-lg mb-5 mt-5 py-[8px] text-white font-inter font-bold flex items-center shadow-md\" v-if=\"error\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" class=\"w-5 mr-1\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M12 9v3.75m9-.75a9 9 0 11-18 0 9 9 0 0118 0zm-9 3.75h.008v.008H12v-.008z\" />\n          </svg>\n          {{ errorMsg }}\n        </div>\n\n        <div class=\"flex items-end\">\n          <ColorPicker @color=\"(n) => color = n\" />\n          <input type=\"text\" id=\"title\" name=\"title\" v-model=\"title\" class=\"input-field-non-border ml-5\" placeholder=\"Tilføj titel\">\n        </div>\n\n        <div class=\"flex mt-4 items-center\">\n          <div class=\"h-16\">\n            <p class=\"font-inter text-[13px] text-gray-800 mb-1\">Opgave start</p>\n            <div class=\"-mx-1 flex items-center\">\n              <div class=\"w-32 px-1\">\n                <DateButton :setMaxDate=\"endDate\" @date=\"(n) => startDate = n\"/>\n              </div>\n              <div class=\"w-24 px-1\" v-if=\"!allDaySwitch\">\n                <TimeButton @time=\"(n) => startTime = n\" />\n              </div>\n            </div>\n          </div>\n          <div class=\"flex\" v-if=\"!allDaySwitch || endSwitch\">\n            <div class=\"mx-10 mt-5 text-gray-600 flex items-center text-sm font-light\">\n              til\n            </div>\n            <div>\n              <p class=\"font-inter text-[13px] text-gray-800 mb-1\">Opgave slut</p>\n              <div class=\"-mx-1 flex items-center\">\n                <transition name=\"slide-fade\" class=\"h-9\">\n                  <div v-if=\"endSwitch\" class=\"w-32 px-1\">\n                    <DateButton :setMinDate=\"startDate\" datePickerPosition=\"right-[-20px]\" @date=\"(n) => endDate = n\"/>\n                  </div>\n                </transition>\n                <div class=\"w-32 px-1\" v-if=\"!allDaySwitch\">\n                  <TimeButton @time=\"(n) => endTime = n\" />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"flex gap-x-5\">\n          <SwitchButton title=\"Tilføj slut dato\" @clicked=\"toggleEndSwitch\" />\n          <SwitchButton title=\"Hele dagen\" @clicked=\"toggleAllDaySwitch\" />\n        </div>\n\n        <div class=\"mt-20\">\n          <button @click=\"createTask\" class=\"text-sm font-inter text-gray-700 font-medium py-3 px-5 rounded-md hover-transition\" :class=\"!loading ? 'bg-gray-200 hover:bg-primary hover:text-white' : 'bg-gray-400'\">\n            <span v-if=\"!loading\" class=\"flex items-center\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"4\" stroke=\"currentColor\" class=\"w-4 mr-[5px]\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M12 4.5v15m7.5-7.5h-15\" />\n              </svg>\n              Opret opgave\n            </span>\n            <span v-else class=\"flex items-center text-white\">\n              <img src=\"@/assets/images/loader.gif\" class=\"w-5 mr-2\" alt=\"loader\"/>\n              Indlæser...\n            </span>\n          </button>\n        </div>\n      </div>\n    </PopUp>\n  </div>\n</template>\n<script setup>\n  import { ref } from \"vue\";\n  import SwitchButton from \"@/components/SwitchButton\";\n  import { Auth } from \"@/store/auth\";\n  import axios from \"axios\";\n  import Loading from \"@/components/Suspense/Loading\";\n\n  const emit = defineEmits(['close', 'created']);\n  const startDate = ref(null);\n  const startTime = ref(null);\n  const endDate = ref(null);\n  const endTime = ref(null);\n  const title = ref(null);\n  const color = ref('green');\n  const auth = Auth();\n  const endSwitch = ref(false);\n  const allDaySwitch = ref(false);\n  const loading = ref(false);\n  const error = ref(null);\n  const errorMsg = ref(null);\n\n  const toggleEndSwitch = () => {\n    endSwitch.value = !endSwitch.value;\n\n    if (endSwitch.value === false) {\n      endDate.value = null;\n      endTime.value = null;\n    }\n  }\n\n  const toggleAllDaySwitch = () => {\n    allDaySwitch.value = !allDaySwitch.value;\n\n    if (allDaySwitch.value === true) {\n      startTime.value = null;\n      endTime.value = null;\n    }\n  }\n\n  const createTask = async () => {\n    error.value = false;\n\n    if (startDate.value === null) {\n      error.value = true;\n      errorMsg.value = 'Vælg venligst en dato';\n    }\n\n    if (title.value === null) {\n      error.value = true;\n      errorMsg.value = 'Angiv venligst en overskrift';\n    }\n\n    if (!loading.value && !error.value) {\n      loading.value = true;\n\n      await axios.post('/task', {\n        task: {\n          title: title.value,\n          startDate: startDate.value,\n          startTime: startTime.value ? startTime.value : '00:00',\n          color: color.value,\n          endDate: endDate.value,\n          endTime: endTime.value\n        }\n      }, {\n        headers: {\n          'Authorization': 'Bearer '+ localStorage.getItem('token')\n        }\n      }).then((response) => response.data).then((response) => {\n        loading.value = false;\n        emit('created', response.task);\n        emit('close');\n      }).catch((response) => {\n        error.value = response;\n        errorMsg.value = 'Der opstod en fejl';\n        loading.value = false;\n      });\n    } else {\n      return false;\n    }\n  }\n</script>\n<style lang=\"css\">\n  .slide-fade-enter-active {\n    transition: all 0.3s ease-out;\n  }\n\n  .slide-fade-leave-active {\n    transition: all 0.3s ease-in;\n  }\n\n  .slide-fade-enter-from,\n  .slide-fade-leave-to {\n    transform: translateX(-20px);\n    opacity: 0;\n  }\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}