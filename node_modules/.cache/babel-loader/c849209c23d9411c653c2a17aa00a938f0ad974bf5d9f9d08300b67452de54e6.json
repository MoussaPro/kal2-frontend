{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"flex items-center justify-between bg-gray-200 p-2\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"font-inter text-[13px] font-medium\"\n}, \"Om opgaven\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"grid grid-cols-2 gap-x-5 gap-y-4 p-2\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Loader = _resolveComponent(\"Loader\");\n  const _component_RouterLink = _resolveComponent(\"RouterLink\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([\"bg-gray-50 overflow-y-scroll relative max-h-[40vh] rounded-md shadow-md\", {\n      'h-[200px]': $setup.loading\n    }])\n  }, [_createVNode(_component_Loader, {\n    loading: $setup.loading\n  }, null, 8 /* PROPS */, [\"loading\"]), _createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _createVNode(_component_RouterLink, {\n    to: \"/directory/fields\",\n    class: \"bg-gray-600 px-4 hover-transition hover:opacity-75 rounded shadow text-[12px] text-gray-200 py-[2px] font-inter\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Rediger felter\")]),\n    _: 1 /* STABLE */\n  })]), _createElementVNode(\"div\", _hoisted_3, [$setup.primaryFields ? (_openBlock(true), _createElementBlock(_Fragment, {\n    key: 0\n  }, _renderList(JSON.parse($setup.primaryFields.fields), field => {\n    return _openBlock(), _createElementBlock(\"div\", null, [_createVNode($setup[\"DisplayField\"], {\n      field: field\n    }, null, 8 /* PROPS */, [\"field\"])]);\n  }), 256 /* UNKEYED_FRAGMENT */)) : _createCommentVNode(\"v-if\", true)])], 2 /* CLASS */);\n}","map":{"version":3,"mappings":";;EAGSA,KAAK,EAAC;AAAmD;gCAC5DC,oBAA4D;EAAzDD,KAAK,EAAC;AAAoC,GAAC,YAAU;;EAGrDA,KAAK,EAAC;AAAsC;;;;uBANnDE,oBAWM;IAXDF,KAAK,mBAAC,yEAAyE;MAAA,aAAuBG;IAAO;MAChHC,aAA4BC;IAAnBC,OAAO,EAAEH;EAAO,sCACzBF,oBAGM,OAHNM,UAGM,GAFJC,UAA4D,EAC5DJ,aAAsLK;IAA1KC,EAAE,EAAC,mBAAmB;IAACV,KAAK,EAAC;;sBAAkH,MAAc,kBAAd,gBAAc;;QAE3KC,oBAIM,OAJNU,UAIM,GAHyDR,oBAAa,sBAA1ED,oBAEMU;IAAAC;EAAA,eAFeC,IAAI,CAACC,KAAK,CAACZ,oBAAa,CAACa,MAAM,GAAxCC,KAAK;yBAAjBf,oBAEM,cADJE,aAA+BD;MAAhBc,KAAK,EAAEA;IAAK","names":["class","_createElementVNode","_createElementBlock","$setup","_createVNode","_component_Loader","loading","_hoisted_1","_hoisted_2","_component_RouterLink","to","_hoisted_3","_Fragment","key","JSON","parse","fields","field"],"sourceRoot":"","sources":["/Users/khaled.el-moussa/Desktop/Projekter/Kal2/frontend/src/components/NewTask/Fields/FieldsContainer.vue"],"sourcesContent":["<template>\n  <div class=\"bg-gray-50 overflow-y-scroll relative max-h-[40vh] rounded-md shadow-md\" :class=\"{'h-[200px]': loading}\">\n    <Loader :loading=\"loading\"/>\n    <div class=\"flex items-center justify-between bg-gray-200 p-2\">\n      <p class=\"font-inter text-[13px] font-medium\">Om opgaven</p>\n      <RouterLink to=\"/directory/fields\" class=\"bg-gray-600 px-4 hover-transition hover:opacity-75 rounded shadow text-[12px] text-gray-200 py-[2px] font-inter\">Rediger felter</RouterLink>\n    </div>\n    <div class=\"grid grid-cols-2 gap-x-5 gap-y-4 p-2\">\n      <div v-for=\"field in JSON.parse(primaryFields.fields)\" v-if=\"primaryFields\">\n        <DisplayField :field=\"field\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { computed, onMounted, ref } from \"vue\";\nimport axios from \"axios\";\nimport DisplayField from \"@/components/DisplayField\";\n\n  const props = defineProps({\n    jsonData: String\n  });\n\n  const apiData = ref();\n  const loading = ref();\n  const error = ref();\n\n  const primaryFields = computed(() => {\n    if (apiData.value) {\n      return apiData.value.filter(field => field.is_primary === 1)[0]\n    }\n  });\n\n  onMounted(() => {\n    try {\n      loading.value = true;\n      axios.get('/fields', {\n        headers: {\n          'Authorization': 'Bearer '+ localStorage.getItem('token')\n        }\n      }).then((response) => response.data).then((response) => {\n        apiData.value = response.fields;\n        loading.value = false;\n      }).catch((response) => {\n        error.value = response;\n      });\n    } catch(e) {\n      error.value = e;\n    }\n  });\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}