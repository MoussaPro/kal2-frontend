{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"p-4 relative\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"text-xl font-inter font-medium\"\n}, \"Felter skabeloner\", -1 /* HOISTED */);\nconst _hoisted_4 = {\n  class: \"grid gap-x-10 grid-cols-3 mt-3\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ApiLoader = _resolveComponent(\"ApiLoader\");\n  const _component_CreateNewBox = _resolveComponent(\"CreateNewBox\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_ApiLoader, {\n    error: $setup.error,\n    loading: $setup.loading\n  }, null, 8 /* PROPS */, [\"error\", \"loading\"]), !$setup.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_CreateNewBox, {\n    css: \"h-[300px]\",\n    text: \"Opret ny skabelon\"\n  }), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.apiData.fields, fields => {\n    return _openBlock(), _createElementBlock(\"div\", null, _toDisplayString(fields.title), 1 /* TEXT */);\n  }), 256 /* UNKEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;AAAc;;;;gCAIrBC,oBAAiE;EAA7DD,KAAK,EAAC;AAAgC,GAAC,mBAAiB;;EACvDA,KAAK,EAAC;AAAgC;;;;uBAL/CE,oBAYM,OAZNC,UAYM,GAXJC,aAA+CC;IAAnCC,KAAK,EAAEC,YAAK;IAAGC,OAAO,EAAED;kDAExBA,cAAO,kBAAnBL,oBAQM,oBAPJO,UAAiE,EACjER,oBAKM,OALNS,UAKM,GAJJN,aAAyDO;IAA3CC,GAAG,EAAC,WAAW;IAACC,IAAI,EAAC;yBACnCX,oBAEMY,6BAFgBP,cAAO,CAACQ,MAAM,EAAxBA,MAAM;yBAAlBb,oBAEM,8BADDa,MAAM,CAACC,KAAK","names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_createVNode","_component_ApiLoader","error","$setup","loading","_hoisted_3","_hoisted_4","_component_CreateNewBox","css","text","_Fragment","fields","title"],"sourceRoot":"","sources":["/Users/khaled.el-moussa/Desktop/Projekter/Kal2/frontend/src/views/Directory/Fields.vue"],"sourcesContent":["<template>\n  <div class=\"p-4 relative\">\n    <ApiLoader :error=\"error\" :loading=\"loading\" />\n\n    <div v-if=\"!loading\">\n      <h1 class=\"text-xl font-inter font-medium\">Felter skabeloner</h1>\n      <div class=\"grid gap-x-10 grid-cols-3 mt-3\">\n        <CreateNewBox css=\"h-[300px]\" text=\"Opret ny skabelon\" />\n        <div v-for=\"fields in apiData.fields\">\n          {{ fields.title }}\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\n  import { ref } from \"vue\";\n  import axios from \"axios\";\n  const title = ref();\n  const apiData = ref();\n  const loading = ref(true);\n  const error = ref(false);\n\n  try {\n    axios.get('/fields', {\n      headers: {\n        'Authorization': 'Bearer '+ localStorage.getItem('token')\n      }\n    }).then((response) => response.data).then((response) => {\n      apiData.value = response;\n      console.log(apiData.value);\n      loading.value = false;\n    }).catch((response) => {\n      error.value = response;\n    });\n  } catch(e) {\n    error.value = e;\n  }\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}