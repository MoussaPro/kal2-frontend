{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"fixed w-full h-full bg-black/40 z-[999999] left-0 top-0\"\n}, \" sad \", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  key: 0,\n  class: \"line-clamp-1 -mx-[2px]\"\n};\nconst _hoisted_3 = {\n  class: \"inline mx-[2px] font-medium\"\n};\nconst _hoisted_4 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, $props.task.moreTask ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: \"border rounded-md h-full flex flex-col justify-between text-xs px-2 py-[2px] font-inter shadow relative z-50 hover-transition hover:opacity-75 bg-primary-Darker text-white border-primary font-bold\",\n    onClick: _cache[0] || (_cache[0] = $event => {\n      $setup.openMoreTasks();\n    })\n  }, [_createTextVNode(_toDisplayString($props.task.title) + \" \", 1 /* TEXT */), $props.task.moreTask ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.task.tasks, (task, i) => {\n    return _openBlock(), _createElementBlock(\"p\", _hoisted_3, [i !== 0 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_4, \"| \")) : _createCommentVNode(\"v-if\", true), _createTextVNode(\" #\" + _toDisplayString(task.id), 1 /* TEXT */)]);\n  }), 256 /* UNKEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true)])) : (_openBlock(), _createElementBlock(\"div\", {\n    key: 1,\n    class: _normalizeClass([\"border rounded-md text-xs px-2 py-[2px] font-inter shadow relative z-50 hover-transition hover:opacity-75\", $props.task.task_color]),\n    style: _normalizeStyle($setup.styling)\n  }, _toDisplayString($props.task.title), 7 /* TEXT, CLASS, STYLE */))]);\n}","map":{"version":3,"mappings":";gCAEIA,oBAEM;EAFDC,KAAK,EAAC;AAAyD,GAAC,OAErE;;;EAGOA,KAAK,EAAC;;;EACNA,KAAK,EAAC;AAA6B;;;;;uBAP5CC,oBAkBM,cAjBJC,UAEM,EACKC,WAAI,CAACC,QAAQ,kBAAxBH,oBASM;;IAToBD,KAAK,EAAC,sMAAsM;IAAEK,OAAK;MAAEC,oBAAa;IAAA;wCACvPH,WAAI,CAACI,KAAK,IAAG,GAChB,iBAA0CJ,WAAI,CAACC,QAAQ,kBAAvDH,oBAKM,OALNO,UAKM,sBAJJP,oBAGIQ,6BAHuDN,WAAI,CAACO,KAAK,GAAtBC,IAAI,EAAEC,CAAC;yBAAtDX,oBAGI,KAHJY,UAGI,GAFUD,CAAC,wBAAbX,oBAA8B,oBAAT,IAAE,yDAAO,IAC7B,oBAAGU,IAAI,CAACG,EAAE;8FAMjBb,oBAEM;;IAFMD,KAAK,mBAAC,2GAA2G,EAASG,WAAI,CAACY,UAAU;IAAGC,KAAK,kBAAEV,cAAO;sBACjKH,WAAI,CAACI,KAAK","names":["_createElementVNode","class","_createElementBlock","_hoisted_1","$props","moreTask","onClick","$setup","title","_hoisted_2","_Fragment","tasks","task","i","_hoisted_3","id","task_color","style"],"sourceRoot":"","sources":["/Users/khaled.el-moussa/Desktop/Projekter/Kal2/frontend/src/components/Calendar/Week/Task.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"fixed w-full h-full bg-black/40 z-[999999] left-0 top-0\">\n      sad\n    </div>\n    <div v-if=\"task.moreTask\" class=\"border rounded-md h-full flex flex-col justify-between text-xs px-2 py-[2px] font-inter shadow relative z-50 hover-transition hover:opacity-75 bg-primary-Darker text-white border-primary font-bold\" @click=\"openMoreTasks();\">\n      {{ task.title }}\n      <div class=\"line-clamp-1 -mx-[2px]\" v-if=\"task.moreTask\">\n        <p class=\"inline mx-[2px] font-medium\" v-for=\"(task, i) in task.tasks\">\n          <span v-if=\"i !== 0\">| </span>\n          #{{ task.id }}\n        </p>\n      </div>\n\n    </div>\n\n    <div v-else class=\"border rounded-md text-xs px-2 py-[2px] font-inter shadow relative z-50 hover-transition hover:opacity-75\" :class=\"task.task_color\" :style=\"styling\">\n      {{ task.title }}\n    </div>\n  </div>\n</template>\n\n<script setup>\n  import timeHandler from \"@/composables/timeHandler\";\n  import { ref } from \"vue\";\n  import colorHandler from \"@/composables/colorHandler\";\n\n  const props = defineProps({\n    task: {\n      type: Object,\n      required: true\n    }\n  });\n\n  const { taskHeight, diffBetweenTwoTimes } = timeHandler();\n  const { getTaskColors } = colorHandler();\n\n  const calculateHeight = (start, end) => {\n    const diff = diffBetweenTwoTimes(start, end, 'minutes');\n    return diff*taskHeight.minute;\n  }\n\n  const styling = ref('');\n  if (!props.task.moreTask) {\n    const color = ref(getTaskColors(props.task.task_color));\n    styling.value = \"height: \" + calculateHeight(props.task.task_time, props.task.task_time_end) + \"px;\";\n    styling.value += \" margin-top:\" + (props.task.diff / 60) * taskHeight.hour + \"px;\";\n    styling.value += \" background-color:\" + color.value['background'] + \";\";\n    styling.value += \" color:\" + color.value['text'] + \";\";\n    styling.value += \" border-color:\" + color.value['border'] + \";\";\n    styling.value += \" z-index:\" + props.task.task_time.slice(0, 2) + \";\";\n  }\n\n  const openMoreTasks = () => {\n\n  }\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}