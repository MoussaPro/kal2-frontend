{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementBlock as _createElementBlock, createVNode as _createVNode, Suspense as _Suspense, withCtx as _withCtx, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  key: 2,\n  class: \"\"\n};\nconst _hoisted_2 = {\n  key: 3\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Top = _resolveComponent(\"Top\");\n  const _component_TopLogged = _resolveComponent(\"TopLogged\");\n  const _component_router_view = _resolveComponent(\"router-view\");\n  const _component_Loading = _resolveComponent(\"Loading\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [!$setup.auth.check() && $setup.route.fullPath !== '/login' && $setup.route.fullPath !== '/register' ? (_openBlock(), _createBlock(_component_Top, {\n    key: 0\n  })) : _createCommentVNode(\"v-if\", true), $setup.auth.check() ? (_openBlock(), _createBlock(_component_TopLogged, {\n    key: 1\n  })) : _createCommentVNode(\"v-if\", true), $setup.error ? (_openBlock(), _createElementBlock(\"h1\", _hoisted_1, _toDisplayString($setup.error), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $setup.error ? (_openBlock(), _createElementBlock(\"h1\", _hoisted_2, \"Fejlet\")) : (_openBlock(), _createBlock(_Suspense, {\n    key: 4\n  }, {\n    fallback: _withCtx(() => [_createVNode(_component_Loading)]),\n    default: _withCtx(() => [(_openBlock(), _createBlock(_component_router_view, {\n      key: $setup.route.fullPath\n    }))]),\n    _: 1 /* STABLE */\n  }))], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;EAIMA,KAAK,EAAC;;;;;;;;;;8DAHEC,WAAI,CAACC,KAAK,MAAMD,YAAK,CAACE,QAAQ,iBAAiBF,YAAK,CAACE,QAAQ,kCAAzEC,aAA6FC;IAAAC;EAAA,yCAC5EL,WAAI,CAACC,KAAK,oBAA3BE,aAAiCG;IAAAD;EAAA,yCAEdL,YAAK,kBAAxBO,oBAA0C,MAA1CC,UAA0C,mBAAbR,YAAK,uDAExBA,YAAK,kBAAfO,oBAA4B,kBAAX,QAAM,oBACvBJ,aAKWM;IAAAJ;EAAA;IAHEK,QAAQ,WACjB,MAAW,CAAXC,aAAWC;sBAFb,MAAiD,gBAAjDT,aAAiDU;MAAnCR,GAAG,EAAEL,YAAK,CAACE","names":["class","$setup","check","fullPath","_createBlock","_component_Top","key","_component_TopLogged","_createElementBlock","_hoisted_1","_Suspense","fallback","_createVNode","_component_Loading","_component_router_view"],"sourceRoot":"","sources":["/Users/khaled.el-moussa/Desktop/Projekter/Kal2/frontend/src/App.vue"],"sourcesContent":["<template>\n  <Top v-if=\"!auth.check() && route.fullPath !== '/login' && route.fullPath !== '/register'\" />\n  <TopLogged v-if=\"auth.check()\" />\n\n  <h1 class=\"\" v-if=\"error\">{{ error }}</h1>\n\n  <h1 v-if=\"error\">Fejlet</h1>\n  <suspense v-else>\n    <router-view :key=\"route.fullPath\"></router-view>\n    <template #fallback>\n      <Loading />\n    </template>\n  </suspense>\n\n</template>\n<script setup>\n  import { useRoute } from \"vue-router/dist/vue-router\";\n  import { Auth } from \"@/store/auth\";\n  import { onErrorCaptured, ref } from \"vue\";\n  const auth = Auth();\n  const error = ref(null);\n\n  onErrorCaptured((e) => {\n    error.value = true;\n  });\n\n  const route = useRoute();\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}