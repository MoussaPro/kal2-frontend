{"ast":null,"code":"import { computed, onMounted, ref } from \"vue\";\nimport axios from \"axios\";\nexport default {\n  __name: 'FieldsContainer',\n  props: {\n    jsonData: String\n  },\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const props = __props;\n    const apiData = ref();\n    const loading = ref();\n    const error = ref();\n    const primaryFields = computed(() => {\n      if (apiData.value) {\n        return apiData.value.filter(field => field.is_primary === 1)[0];\n      }\n    });\n    onMounted(() => {\n      try {\n        loading.value = true;\n        axios.get('/fields', {\n          headers: {\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\n          }\n        }).then(response => response.data).then(response => {\n          apiData.value = response.fields;\n          loading.value = false;\n        }).catch(response => {\n          error.value = response;\n        });\n      } catch (e) {\n        error.value = e;\n      }\n    });\n    const __returned__ = {\n      props,\n      apiData,\n      loading,\n      error,\n      primaryFields,\n      computed,\n      onMounted,\n      ref,\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":"AAgBA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,GAAG,QAAQ,KAAK;AAC9C,OAAOC,KAAK,MAAM,OAAO;;;;;;;;;;;IAMvB,MAAMC,OAAO,GAAGF,GAAG,EAAE;IACrB,MAAMG,OAAO,GAAGH,GAAG,EAAE;IACrB,MAAMI,KAAK,GAAGJ,GAAG,EAAE;IAEnB,MAAMK,aAAa,GAAGP,QAAQ,CAAC,MAAM;MACnC,IAAII,OAAO,CAACI,KAAK,EAAE;QACjB,OAAOJ,OAAO,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACC,UAAU,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;MACjE;IACF,CAAC,CAAC;IAEFV,SAAS,CAAC,MAAM;MACd,IAAI;QACFI,OAAO,CAACG,KAAK,GAAG,IAAI;QACpBL,KAAK,CAACS,GAAG,CAAC,SAAS,EAAE;UACnBC,OAAO,EAAE;YACP,eAAe,EAAE,SAAS,GAAEC,YAAY,CAACC,OAAO,CAAC,OAAO;UAC1D;QACF,CAAC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAACF,IAAI,CAAEC,QAAQ,IAAK;UACtDb,OAAO,CAACI,KAAK,GAAGS,QAAQ,CAACE,MAAM;UAC/Bd,OAAO,CAACG,KAAK,GAAG,KAAK;QACvB,CAAC,CAAC,CAACY,KAAK,CAAEH,QAAQ,IAAK;UACrBX,KAAK,CAACE,KAAK,GAAGS,QAAQ;QACxB,CAAC,CAAC;MACJ,CAAC,CAAC,OAAMI,CAAC,EAAE;QACTf,KAAK,CAACE,KAAK,GAAGa,CAAC;MACjB;IACF,CAAC,CAAC","names":["computed","onMounted","ref","axios","apiData","loading","error","primaryFields","value","filter","field","is_primary","get","headers","localStorage","getItem","then","response","data","fields","catch","e"],"sources":["/Users/khaled.el-moussa/Desktop/Projekter/Kal2/frontend/src/components/NewTask/Fields/FieldsContainer.vue"],"sourcesContent":["<template>\n  <div class=\"bg-gray-50 overflow-y-scroll relative max-h-[40vh] rounded-md shadow-md\" :class=\"{'h-[200px]': loading}\">\n    <Loader :loading=\"loading\"/>\n    <div class=\"flex items-center justify-between bg-gray-200 p-2\">\n      <p class=\"font-inter text-[13px] font-medium\">Om opgaven</p>\n      <RouterLink to=\"/directory/fields\" class=\"bg-gray-600 px-4 hover-transition hover:opacity-75 rounded shadow text-[12px] text-gray-200 py-[2px] font-inter\">Rediger felter</RouterLink>\n    </div>\n    <div class=\"grid grid-cols-2 gap-x-5 gap-y-4 p-2\">\n      <div v-for=\"field in JSON.parse(primaryFields.fields)\" v-if=\"primaryFields\">\n        {{ field.title }}\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { computed, onMounted, ref } from \"vue\";\nimport axios from \"axios\";\n\n  const props = defineProps({\n    jsonData: String\n  });\n\n  const apiData = ref();\n  const loading = ref();\n  const error = ref();\n\n  const primaryFields = computed(() => {\n    if (apiData.value) {\n      return apiData.value.filter(field => field.is_primary === 1)[0]\n    }\n  });\n\n  onMounted(() => {\n    try {\n      loading.value = true;\n      axios.get('/fields', {\n        headers: {\n          'Authorization': 'Bearer '+ localStorage.getItem('token')\n        }\n      }).then((response) => response.data).then((response) => {\n        apiData.value = response.fields;\n        loading.value = false;\n      }).catch((response) => {\n        error.value = response;\n      });\n    } catch(e) {\n      error.value = e;\n    }\n  });\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}