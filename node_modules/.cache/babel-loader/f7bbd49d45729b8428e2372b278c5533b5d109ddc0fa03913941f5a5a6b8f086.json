{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, normalizeStyle as _normalizeStyle } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"h-full relative z-50\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"line-clamp-1 -mx-[2px]\"\n};\nconst _hoisted_3 = {\n  class: \"inline mx-[2px] font-medium\"\n};\nconst _hoisted_4 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [$props.task.moreTask ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" More task component \"), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"border rounded-md h-full flex flex-col justify-between text-xs px-2 py-[2px] font-inter hover-transition hover:opacity-75 relative shadow bg-primary-Darker text-white border-primary font-bold cursor-pointer\", {\n      'opacity-75 hover:opacity-100': $setup.openMoreTaskToggle\n    }]),\n    onClick: $setup.openMoreTask\n  }, [_createTextVNode(_toDisplayString($props.task.title) + \" \", 1 /* TEXT */), $props.task.moreTask ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.task.tasks, (task, i) => {\n    return _openBlock(), _createElementBlock(\"p\", _hoisted_3, [i !== 0 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_4, \"| \")) : _createCommentVNode(\"v-if\", true), _createTextVNode(\" #\" + _toDisplayString(task.id), 1 /* TEXT */)]);\n  }), 256 /* UNKEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true)], 2 /* CLASS */)])) : (_openBlock(), _createElementBlock(\"div\", {\n    key: 1,\n    class: \"border rounded-md text-xs px-2 py-[2px] font-inter shadow relative hover-transition hover:opacity-75 cursor-pointer\",\n    style: _normalizeStyle($setup.styling)\n  }, _toDisplayString($props.task.title), 5 /* TEXT, STYLE */))]);\n}","map":{"version":3,"mappings":";;;EAE8BA,KAAK,EAAC;;;;EAMvBA,KAAK,EAAC;;;EACNA,KAAK,EAAC;AAA6B;;;;;uBAR9CC,oBAmBM,cAlBOC,WAAI,CAACC,QAAQ,kBAAxBF,oBAaM,OAbNG,UAaM,GAZJC,4CAA4B,EAC5BC,oBAUM;IAVDN,KAAK,mBAAC,gNAAgN;MAAA,gCAC7KO;IAAkB;IAC1DC,OAAK,EAAED;wCACRL,WAAI,CAACO,KAAK,IAAG,GAChB,iBAA0CP,WAAI,CAACC,QAAQ,kBAAvDF,oBAKM,OALNS,UAKM,sBAJJT,oBAGIU,6BAHuDT,WAAI,CAACU,KAAK,GAAtBC,IAAI,EAAEC,CAAC;yBAAtDb,oBAGI,KAHJc,UAGI,GAFUD,CAAC,wBAAbb,oBAA8B,oBAAT,IAAE,yDAAO,IAC7B,oBAAGY,IAAI,CAACG,EAAE;+GAMnBf,oBAEM;;IAFMD,KAAK,EAAC,qHAAqH;IAAEiB,KAAK,kBAAEV,cAAO;sBAClJL,WAAI,CAACO,KAAK","names":["class","_createElementBlock","$props","moreTask","_hoisted_1","_createCommentVNode","_createElementVNode","$setup","onClick","title","_hoisted_2","_Fragment","tasks","task","i","_hoisted_3","id","style"],"sourceRoot":"","sources":["/Users/khaled.el-moussa/Desktop/Projekter/Kal2/frontend/src/components/Calendar/TaskBox.vue"],"sourcesContent":["<template>\n  <div>\n    <div v-if=\"task.moreTask\" class=\"h-full relative z-50\">\n      <!-- More task component -->\n      <div class=\"border rounded-md h-full flex flex-col justify-between text-xs px-2 py-[2px] font-inter hover-transition hover:opacity-75 relative shadow bg-primary-Darker text-white border-primary font-bold cursor-pointer\"\n           :class=\"{'opacity-75 hover:opacity-100': openMoreTaskToggle}\"\n           @click=\"openMoreTask\">\n        {{ task.title }}\n        <div class=\"line-clamp-1 -mx-[2px]\" v-if=\"task.moreTask\">\n          <p class=\"inline mx-[2px] font-medium\" v-for=\"(task, i) in task.tasks\">\n            <span v-if=\"i !== 0\">| </span>\n            #{{ task.id }}\n          </p>\n        </div>\n      </div>\n    </div>\n\n    <div v-else class=\"border rounded-md text-xs px-2 py-[2px] font-inter shadow relative hover-transition hover:opacity-75 cursor-pointer\" :style=\"styling\">\n      {{ task.title }}\n    </div>\n  </div>\n</template>\n<script setup>\n  import timeHandler from \"@/composables/timeHandler\";\n  import colorHandler from \"@/composables/colorHandler\";\n  import { ref } from \"vue\";\n\n  const props = defineProps({\n    task: {\n      type: Object\n    },\n    moreTask: {\n      type: Boolean\n    }\n  });\n\n  const emit = defineEmits(['openMoreTask'])\n\n  const { taskHeight, diffBetweenTwoTimes } = timeHandler();\n  const { getTaskColors } = colorHandler();\n\n  const calculateHeight = (start, end) => {\n    const diff = diffBetweenTwoTimes(start, end, 'minutes');\n    return diff*taskHeight.minute;\n  }\n\n  const styling = ref('');\n  if (!props.moreTask) {\n    const color = ref(getTaskColors(props.task.task_color));\n    styling.value = \"height: \" + calculateHeight(props.task.task_time, props.task.task_time_end) + \"px;\";\n    styling.value += \" margin-top:\" + (props.task.diff / 60) * taskHeight.hour + \"px;\";\n    styling.value += \" z-index:\" + props.task.task_time.slice(0, 2) + \";\";\n    styling.value += \" background-color:\" + color.value['background'] + \";\";\n    styling.value += \" color:\" + color.value['text'] + \";\";\n    styling.value += \" border-color:\" + color.value['border'] + \";\";\n  }\n\n  const openMoreTaskToggle = ref(false);\n  const openMoreTask = () => {\n    emit('openMoreTask');\n\n    return openMoreTaskToggle.value = !openMoreTaskToggle.value;\n  }\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}