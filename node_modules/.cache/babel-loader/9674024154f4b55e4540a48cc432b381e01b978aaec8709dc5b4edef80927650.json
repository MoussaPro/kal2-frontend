{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", null, _toDisplayString($setup.apiData), 1 /* TEXT */)]);\n}","map":{"version":3,"mappings":";;uBACEA,oBAEM,cADJC,oBAAwB,8BAAhBC,cAAO","names":["_createElementBlock","_createElementVNode","$setup"],"sourceRoot":"","sources":["/Users/khaled.el-moussa/Desktop/Projekter/Kal2/frontend/src/components/Calendar/Week.vue"],"sourcesContent":["<template>\n  <div>\n    <div>{{ apiData }}</div>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from \"vue\";\nimport backend from \"@/composables/backend\";\nimport dateHandler from \"@/composables/dateHandler\";\n\n  /** API TODO **/\n  /*\n  1. Ugedage skal være bold når det er idag\n  2. Week days\n  3. Opgaver\n  */\n  const { apiData } = await backend('/calendar/week');\n  const { getDay, getDate, isToday } = dateHandler();\n  const weekDays = ref([]);\n\n  if (apiData) {\n    apiData.value.week.map(function(value, key) {\n      weekDays.value.push({\n        'day': getDay(value, 'name'),\n        'date': getDate(value, '/'),\n        'isToday': isToday(value)\n      });\n    });\n  }\n\n  const times = [\n    '00', '02', '04', '06', '08', '10', '12', '14', '16', '18', '20', '22'\n  ];\n\n  const heightClass = ref('h-14');\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}