{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"auth-content\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  class: \"p-10\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"text-primary\"\n}, \"field.title\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ApiLoader = _resolveComponent(\"ApiLoader\");\n  const _component_BlockTitle = _resolveComponent(\"BlockTitle\");\n  const _component_Block = _resolveComponent(\"Block\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_ApiLoader, {\n    error: $setup.error,\n    loading: $setup.loading,\n    class: \"mt-5\"\n  }, null, 8 /* PROPS */, [\"error\", \"loading\"]), !$setup.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(_component_Block, {\n    class: \"mt-5\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_BlockTitle, {\n      title: 'Rediger skabelon',\n      class: \"mb-5\"\n    }), _hoisted_4])]),\n    _: 1 /* STABLE */\n  })])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;AAAc;;;;;EAKdA,KAAK,EAAC;AAAM;gCAEfC,oBAA6C;EAAvCD,KAAK,EAAC;AAAc,GAAC,aAAW;;;;;;uBAP9CE,oBAYM,OAZNC,UAYM,GAXJC,aAA4DC;IAAhDC,KAAK,EAAEC,YAAK;IAAGC,OAAO,EAAED,cAAO;IAAEP,KAAK,EAAC;kDAEvCO,cAAO,kBAAnBL,oBAQM,oBAPJE,aAMQK;IANDT,KAAK,EAAC;EAAM;sBACjB,MAIM,CAJNC,oBAIM,OAJNS,UAIM,GAHJN,aAAsDO;MAAzCC,KAAK,EAAE,kBAAkB;MAAEZ,KAAK,EAAC;QAC9Ca,UAA6C","names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_createVNode","_component_ApiLoader","error","$setup","loading","_component_Block","_hoisted_3","_component_BlockTitle","title","_hoisted_4"],"sourceRoot":"","sources":["/Users/khaled.el-moussa/Desktop/Projekter/Kal2/frontend/src/views/Edit/Field.vue"],"sourcesContent":["<template>\n  <div class=\"auth-content\">\n    <ApiLoader :error=\"error\" :loading=\"loading\" class=\"mt-5\" />\n\n    <div v-if=\"!loading\">\n      <Block class=\"mt-5\">\n        <div class=\"p-10\">\n          <BlockTitle :title=\"'Rediger skabelon'\" class=\"mb-5\"/>\n          <span class=\"text-primary\">field.title</span>\n\n        </div>\n      </Block>\n    </div>\n  </div>\n</template>\n<script setup>\n  import { useRoute } from \"vue-router/dist/vue-router\";\n  import { onMounted, ref } from \"vue\";\n  import axios from \"axios\";\n  import { useRouter } from \"vue-router\";\n\n  const route = useRoute();\n  const router = useRouter();\n  const field = ref();\n  const loading = ref(true);\n  const error = ref();\n\n  onMounted(() => {\n    try {\n      axios.get('/field/'+route.params.id, {\n        headers: {\n          'Authorization': 'Bearer '+ localStorage.getItem('token')\n        }\n      }).then((response) => response.data).then((response) => {\n        field.value = response;\n        console.log(field.value);\n        loading.value = false;\n      }).catch((response) => {\n        error.value = response;\n        console.log(error.value);\n        console.log(localStorage.getItem('token'));\n      });\n    } catch(e) {\n      error.value = e;\n    }\n  });\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}