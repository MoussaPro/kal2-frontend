{"ast":null,"code":"import colorHandler from \"@/composables/colorHandler\";\nimport { ref } from \"vue\";\nimport dateHandler from \"@/composables/dateHandler\";\nexport default {\n  __name: 'TaskView',\n  props: {\n    task: Object\n  },\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const props = __props;\n    const {\n      colors\n    } = colorHandler();\n    const {\n      dateCalender\n    } = dateHandler();\n    const color = ref();\n    const task_ends = !props.task.task_date_end && !props.task.task_time_end;\n    color.value = colors.filter(color => {\n      return color.name === props.task.task_color;\n    });\n    console.log(props.task);\n    const __returned__ = {\n      colors,\n      dateCalender,\n      props,\n      color,\n      task_ends,\n      get colorHandler() {\n        return colorHandler;\n      },\n      ref,\n      get dateHandler() {\n        return dateHandler;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":"AA6BE,OAAOA,YAAY,MAAM,4BAA4B;AACrD,SAASC,GAAG,QAAQ,KAAK;AACzB,OAAOC,WAAW,MAAM,2BAA2B;;;;;;;;;;;IACnD,MAAM;MAAEC;IAAO,CAAC,GAAGH,YAAY,EAAE;IACjC,MAAM;MAAEI;IAAa,CAAC,GAAGF,WAAW,EAAE;IAMtC,MAAMG,KAAK,GAAGJ,GAAG,EAAE;IACnB,MAAMK,SAAS,GAAG,CAACC,KAAK,CAACC,IAAI,CAACC,aAAa,IAAI,CAACF,KAAK,CAACC,IAAI,CAACE,aAAa;IAExEL,KAAK,CAACM,KAAK,GAAGR,MAAM,CAACS,MAAM,CAACP,KAAK,IAAI;MACnC,OAAOA,KAAK,CAACQ,IAAI,KAAKN,KAAK,CAACC,IAAI,CAACM,UAAU;IAC7C,CAAC,CAAC;IAEFC,OAAO,CAACC,GAAG,CAACT,KAAK,CAACC,IAAI,CAAC","names":["colorHandler","ref","dateHandler","colors","dateCalender","color","task_ends","props","task","task_date_end","task_time_end","value","filter","name","task_color","console","log"],"sources":["/Users/khaled.el-moussa/Desktop/Projekter/Kal2/frontend/src/components/Calendar/TaskView.vue"],"sourcesContent":["<template>\n  <div class=\"w-full\" v-if=\"task\">\n    <div class=\"max-w-full rounded-md shadow-md p-2\" :class=\"color[0].css\">\n      <div class=\"font-semibold font-inter text-[16px] overflow-x-scroll relative whitespace-nowrap\" :class=\"task.task_color === 'yellow' ? 'text-black' : 'text-white'\">{{ task.title }}</div>\n    </div>\n\n    <div class=\"py-5\">\n      <div class=\"grid grid-cols-2 gap-x-5 justify-between text-gray-700 h-full flex flex-col items-center justify-center\">\n        <div class=\"text-center bg-gray-50 rounded-md p-2\">\n          <p class=\"font-inter text-[15px] leading-none font-medium mb-1\">Opgave start</p>\n          <p class=\"text-[13.5px] tracking-[0.3px]\" v-if=\"task.task_date\">Dato: {{ dateCalender(task.task_date, false) }}</p>\n          <p class=\"text-[13.5px] tracking-[0.3px]\" v-if=\"task.task_time\">Tidspunkt: {{ task.task_time.slice(0, 5) }}</p>\n          <p class=\"text-[13.5px] tracking-[0.3px] font-medium\" v-if=\"task.task_all_day\">Hele dagen</p>\n        </div>\n\n        <div class=\"text-center bg-gray-50 rounded-md p-2 text-gray-700 h-full flex flex-col items-center justify-center\" v-if=\"task_ends\">\n          <p class=\"font-inter text-[15px] leading-none font-medium mb-1\">Opgave slut</p>\n          <div>\n            <p class=\"text-[13.5px] tracking-[0.3px]\" v-if=\"task.task_date_end\">Dato: {{ dateCalender(task.task_date_end, false) }}</p>\n            <p class=\"text-[13.5px] tracking-[0.3px]\" v-if=\"task.task_time_end\">Tidspunkt: {{ task.task_time_end.slice(0, 5) }}</p>\n            <p class=\"text-[13.5px] tracking-[0.3px] font-medium\" v-if=\"task.task_all_day\">Hele dagen</p>\n          </div>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</template>\n<script setup>\n  import colorHandler from \"@/composables/colorHandler\";\n  import { ref } from \"vue\";\n  import dateHandler from \"@/composables/dateHandler\";\n  const { colors } = colorHandler();\n  const { dateCalender } = dateHandler();\n\n  const props = defineProps({\n    task: Object\n  });\n\n  const color = ref();\n  const task_ends = !props.task.task_date_end && !props.task.task_time_end;\n\n  color.value = colors.filter(color => {\n    return color.name === props.task.task_color\n  });\n\n  console.log(props.task);\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}