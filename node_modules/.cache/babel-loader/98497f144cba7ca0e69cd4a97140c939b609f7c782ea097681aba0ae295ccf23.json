{"ast":null,"code":"import { toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"line-clamp-1 flex\"\n};\nconst _hoisted_2 = {\n  class: \"inline\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([\"border rounded-md text-xs px-2 py-[2px] font-inter shadow relative z-50\", $props.task.task_color]),\n    style: _normalizeStyle($setup.styling),\n    onClick: _cache[0] || (_cache[0] = $event => $props.task.moreTask ? _ctx.openModel($props.task.id) : '')\n  }, [_createTextVNode(_toDisplayString($props.task.title) + \" \", 1 /* TEXT */), $props.task.moreTask ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.task.tasks, task => {\n    return _openBlock(), _createElementBlock(\"p\", _hoisted_2, _toDisplayString(task.id), 1 /* TEXT */);\n  }), 256 /* UNKEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true)], 6 /* CLASS, STYLE */);\n}","map":{"version":3,"mappings":";;;EAGSA,KAAK,EAAC;;;EACNA,KAAK,EAAC;AAAQ;;uBAHrBC,oBAOM;IAPDD,KAAK,mBAAC,yEAAyE,EAASE,WAAI,CAACC,UAAU;IAAGC,KAAK,kBAAEC,cAAO;IAAGC,OAAK,sCAAEJ,WAAI,CAACK,QAAQ,GAAGC,cAAS,CAACN,WAAI,CAACO,EAAE;wCACnKP,WAAI,CAACQ,KAAK,IAAG,GAChB,iBAAqCR,WAAI,CAACK,QAAQ,kBAAlDN,oBAIM,OAJNU,UAIM,sBAHJV,oBAEIW,6BAF6BV,WAAI,CAACW,KAAK,EAAlBC,IAAI;yBAA7Bb,oBAEI,KAFJc,UAEI,mBADCD,IAAI,CAACL,EAAE","names":["class","_createElementBlock","$props","task_color","style","$setup","onClick","moreTask","_ctx","id","title","_hoisted_1","_Fragment","tasks","task","_hoisted_2"],"sourceRoot":"","sources":["/Users/khaled.el-moussa/Desktop/Projekter/Kal2/frontend/src/components/Calendar/Week/Task.vue"],"sourcesContent":["<template>\n  <div class=\"border rounded-md text-xs px-2 py-[2px] font-inter shadow relative z-50\" :class=\"task.task_color\" :style=\"styling\" @click=\"task.moreTask ? openModel(task.id) : ''\">\n    {{ task.title }}\n    <div class=\"line-clamp-1 flex\" v-if=\"task.moreTask\">\n      <p class=\"inline\" v-for=\"task in task.tasks\">\n        {{ task.id }}\n      </p>\n    </div>\n  </div>\n</template>\n\n<script setup>\n  import timeHandler from \"@/composables/timeHandler\";\n  import { ref } from \"vue\";\n  import colorHandler from \"@/composables/colorHandler\";\n\n  const props = defineProps({\n    task: {\n      type: Object,\n      required: true\n    }\n  });\n\n  const { taskHeight, diffBetweenTwoTimes } = timeHandler();\n  const { getTaskColors } = colorHandler();\n\n  const calculateHeight = (start, end) => {\n    const diff = diffBetweenTwoTimes(start, end, 'minutes');\n    return diff*taskHeight.minute;\n  }\n\n  const styling = ref('');\n\n  if (!props.task.moreTask) {\n    const color = ref(getTaskColors(props.task.task_color));\n    styling.value = \"height: \"+calculateHeight(props.task.task_time, props.task.task_time_end)+\"px;\";\n    styling.value += \" margin-top:\"+(props.task.diff/60)*taskHeight.hour+\"px;\";\n    styling.value += \" background-color:\"+color.value['background']+\";\";\n    styling.value += \" color:\"+color.value['text']+\";\";\n    styling.value += \" border-color:\"+color.value['border']+\";\";\n    styling.value += \" z-index:\"+props.task.task_time.slice(0, 2)+\";\";\n  } else {\n    const color = ref(getTaskColors());\n    styling.value += \" background-color:\"+color.value['background']+\";\";\n    styling.value += \" color:\"+color.value['text']+\";\";\n    styling.value += \" border-color:\"+color.value['border']+\";\";\n  }\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}