{"ast":null,"code":"import { toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([\"border rounded-md text-xs px-2 py-[2px] font-inter shadow relative z-50\", $props.task.task_color]),\n    style: _normalizeStyle($setup.styling),\n    onClick: _cache[0] || (_cache[0] = $event => $props.task.moreTask ? _ctx.openModel($props.task.id) : '')\n  }, _toDisplayString($props.task.title), 7 /* TEXT, CLASS, STYLE */);\n}","map":{"version":3,"mappings":";;uBACEA,oBAKM;IALDC,KAAK,mBAAC,yEAAyE,EACxEC,WAAI,CAACC,UAAU;IACtBC,KAAK,kBAAEC,cAAO;IACdC,OAAK,sCAAEJ,WAAI,CAACK,QAAQ,GAAGC,cAAS,CAACN,WAAI,CAACO,EAAE;sBACpCP,WAAI,CAACQ,KAAK","names":["_createElementBlock","class","$props","task_color","style","$setup","onClick","moreTask","_ctx","id","title"],"sourceRoot":"","sources":["/Users/khaled.el-moussa/Desktop/Projekter/Kal2/frontend/src/components/Calendar/Week/Task.vue"],"sourcesContent":["<template>\n  <div class=\"border rounded-md text-xs px-2 py-[2px] font-inter shadow relative z-50\"\n      :class=\"task.task_color\"\n      :style=\"styling\"\n      @click=\"task.moreTask ? openModel(task.id) : ''\">\n        {{ task.title }}\n  </div>\n</template>\n\n<script setup>\n  import timeHandler from \"@/composables/timeHandler\";\n  import { ref } from \"vue\";\n  import colorHandler from \"@/composables/colorHandler\";\n\n  const props = defineProps({\n    task: {\n      type: Object,\n      required: true\n    }\n  });\n\n  const { taskHeight, diffBetweenTwoTimes } = timeHandler();\n  const { color } = colorHandler();\n\n  const calculateHeight = (start, end) => {\n    const diff = diffBetweenTwoTimes(start, end, 'minutes');\n    return diff*taskHeight.minute;\n  }\n\n  const styling = ref('');\n\n  if (!props.task.moreTask) {\n    styling.value = \"height: \"+calculateHeight(props.task.task_time, props.task.task_time_end)+\"px;\";\n    styling.value += \" margin-top:\"+(props.task.diff/60)*taskHeight.hour+\"px;\";\n    styling.value += \" background-color:\"+color[props.task.task_color]['background']+\";\";\n    styling.value += \" color:\"+color.value['text']+\";\";\n    styling.value += \" border-color:\"+color.value['border']+\";\";\n    styling.value += \" z-index:\"+props.task.task_time.slice(0, 2)+\";\";\n  }\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}